}
}
#檢查數據變異數的同質性，，如果levenes test 的結果p>0.05，那我們可以認為以這幾個組別間的變異數沒有明顯差異，他們是同質的P
homo<-leveneTest(varaible_and_group,data = data)
if (homo$`Pr(>F)`[1]>0.05){
print("data is homo")
}else{print ("data is nonhomo")}
#如果不同質可以用ftest來看是誰不同質
#res.ftest <- var.test(Data.levels[[1]]$bacitracin,Data.levels[[4]]$bacitracin,data = data)
#res.ftest
}
#我們必須手動去看是否是常態及同質的，如果兩者皆符合，那我們可以使用t-test
pairwise.t.test(data$sum,data$location,p.adjust.method = "BH")
?pairwise.t.test
#如果兩者中有一不符合，那我們得使用wilcoxon rank sum test
pairwise.wilcox.test(data$bacitracin,data$location,p.adjust.method = "BH")
wilcox.test(Data.levels[[4]]$sum,Data.levels[[1]]$sum,exact = F)
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$sum<-apply(data,1,sum)
data$sum1<-data_core_sum
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum))
View(varaible_group_mean)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$sum<-apply(data,1,sum)
data$sum1<-data_core_sum
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum),type_mean_core=mean(sum1),type_sd_core=sd(sum1))
View(varaible_group_mean)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$sum<-apply(data,1,sum)
data$sum1<-data_core_sum
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum),type_mean_core=mean(sum1),type_sd_core=sd(sum1))
View(varaible_group_mean)
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean_core))+geom_line(group=1)+theme_bw()+geom_errorbar(width=0.1)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean_core))+geom_line(aes(x=location,y=type_mean_core),group=1)+theme_bw()+geom_errorbar(width=0.1)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean_core))+geom_line(aes(x=location,y=type_mean_core),group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum),type_mean_core=mean(sum1),type_sd_core=sd(sum1))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_sum_core)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
View(varaible_group_mean)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean))+geom_line(aes(x=location,y=type_mean),group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="grey")+geom_line(aes(x=location,y=type_mean),color="grey",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="grey" width=.1,position=position_dodge(.9))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="grey")+geom_line(aes(x=location,y=type_mean),color="grey",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="grey" ,width=.1,position=position_dodge(.9))
brewer.pal(n=12,name="Set3")
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(name="Total ARGs abundance normalization against 16S"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(.,name="Total ARGs abundance normalization against 16S"))
?sec_axis()
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = NULL,name="Total ARGs abundance normalization against 16S"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12),axis.title.y.right = element_text(color = "blue"))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12),axis.title.y.right = element_text(color = "blue"))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S",color="blue"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S")+ theme(axis.title.y = element_text(color = "grey"),axis.title.y.right = element_text(color = "blue")))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="blue"),axis.text.y.left=element_text(color="blue"),axis.title.y.right=element_text(color="red"),axis.text.y.right=element_text(color="red"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#8DD3C7")+geom_line(aes(x=location,y=type_mean),color="#8DD3C7",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#8DD3C7",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="red"),axis.text.y.right=element_text(color="red"))
brewer.pal(n=12,name="Set3")
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#BEBADA")+geom_line(aes(x=location,y=type_mean),color="#BEBADA",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#BEBADA",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#BEBADA"),axis.text.y.right=element_text(color="#BEBADA"))
display.brewer.pal(n=12,name="Set3")
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FB8072")+geom_line(aes(x=location,y=type_mean),color="#FB8072",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FB8072",width=.1,position=position_dodge(.9))+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FB8072"),axis.text.y.right=element_text(color="#FB8072"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FB8072")+geom_line(aes(x=location,y=type_mean),color="#FB8072",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FB8072",width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FB8072"),axis.text.y.right=element_text(color="#FB8072"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1)+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FB8072")+geom_line(aes(x=location,y=type_mean),color="#FB8072",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FB8072",width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FB8072"),axis.text.y.right=element_text(color="#FB8072"))
source("~/GitHub/R_scripts/Plot/core_ARG ARG correlation.R", echo=TRUE)
brewer.pal(n=12,name="Set3")
View(varaible_group_mean)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1)+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FB8072")+geom_line(aes(x=location,y=type_mean),color="#FB8072",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FB8072",width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FB8072"),axis.text.y.right=element_text(color="#FB8072"))
brewer.pal(n=12,name="Set3")
display.brewer.pal(n=12,name="Set3")
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1)+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FB8072")+geom_line(aes(x=location,y=type_mean),color="#FB8072",group=1)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FB8072",width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FB8072"),axis.text.y.right=element_text(color="#FB8072"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1)+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FB8072",alpha=0.8)+geom_line(aes(x=location,y=type_mean),color="#FB8072",group=1,alpha=0.8)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FB8072",width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FB8072"),axis.text.y.right=element_text(color="#FB8072"))
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1)+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FDB462",alpha=0.8)+geom_line(aes(x=location,y=type_mean),color="#FDB462",group=1,alpha=0.8)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FDB462",width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FDB462"),axis.text.y.right=element_text(color="#FDB462"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1)+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FDB462",alpha=0.7)+geom_line(aes(x=location,y=type_mean),color="#FDB462",group=1,alpha=0.7)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FDB462",width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FDB462"),axis.text.y.right=element_text(color="#FDB462"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean_core), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean_core-type_sd_core, ymax=type_mean_core+type_sd_core), width=.1)+
theme_bw()+ labs(x="Location",y="Core ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+geom_point(aes(x=location,y=type_mean),color="#FDB462",alpha=0.7)+geom_line(aes(x=location,y=type_mean),color="#FDB462",group=1,alpha=0.7)+theme_bw()+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd),color="#FDB462",alpha=0.7,width=.1)+
scale_y_continuous(sec.axis = sec_axis(trans = ~.,name="Total ARGs abundance normalization against 16S"))+
theme(axis.title.y.left=element_text(color="black"),axis.text.y.left=element_text(color="black"),axis.title.y.right=element_text(color="#FDB462"),axis.text.y.right=element_text(color="#FDB462"))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core_sum<-apply(data_core[,2:16],2,sum)
data_sum<-apply(data[,2:16],2,sum)
data1<-as.data.frame(cbind(total_arg=data_sum,core_arg=data_core_sum))
data1<-data1[-(1:3),]
ggplot(data = data1,aes(x=core_arg,y=total_arg))+
geom_point(color="#8DD3C7",size=3)+geom_smooth(method="lm",color="#8DD3C7")+theme_bw()+
labs(y = "Total ARGs abundnace aganists 16S",x="Core ARGs abundnace aganists 16S") +theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
precentage<-data_core_sum/data_sum
datax$precentage<-precentage
sd(data_core_sum)
sd(precentage)
sd(precentage[1:3])
mean(precentage[1:3])
sd(precentage[4:6])
mean(precentage[4:6])
sd(precentage[7:9])
mean(precentage[7:9])
sd(precentage[10:12])
mean(precentage[10:12])
sd(precentage[13:15])
mean(precentage[13:15])
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core_sum<-apply(data_core[,2:16],2,sum)
data_sum<-apply(data[,2:16],2,sum)
data1<-as.data.frame(cbind(total_arg=data_sum,core_arg=data_core_sum))
data1<-data1[-(1:3),]
ggplot(data = data1,aes(x=core_arg,y=total_arg))+
geom_point(color="#8DD3C7",size=3)+geom_smooth(method="lm",color="#8DD3C7")+theme_bw()+
labs(y = "Total ARGs abundnace aganists 16S",x="Core ARGs abundnace aganists 16S") +theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
precentage<-data_core_sum/data_sum
datax$precentage<-precentage
cor.test(data1$core_arg,data1$total_arg,method="pearson")
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
View(data_core)
View(data_core1)
View(data_core)
library(pheatmap)
data_core$core<-NULL
data_core[data_core==0]<-NA
data_log<-log10(data_core)
rownames(data_core)<-data_core$ARGs.abundance.normalization.aganist.16S
data_log<-log10(data_core)
View(data_core)
data_core$ARGs.abundance.normalization.aganist.16S<-NULL
data_log<-log10(data_core)
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=colorRampPalette(c("#FCFBFD", "#BCBDDC", "#54278F"))(50))
pheatmap(data_log,cluster_rows = F,cluster_cols = F)
,color=colorRampPalette(c("#FCFBFD", "#BCBDDC", "#54278F")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=colorRampPalette(c("#FCFBFD", "#BCBDDC", "#54278F"))(50))
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core[data_core==0]<-NA
data_core<-data_core%>%
separate(ARGs.abundance.normalization.aganist.16S,into=c("type","subtype"),sep = "__")
rownames(data_core)<-data_core$subtype
data_core$type<-NULL
data_core$subtype<-NULL
data_log<-log10(data_core)
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=colorRampPalette(c("#FCFBFD", "#BCBDDC", "#54278F"))(50))
View(data_core)
apply(data_core,1,sum(na.rm = T))
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core$sum<-apply(data_core[:2:16],1,sum)
data_core$sum<-apply(data_core[,2:16],1,sum)
View(data_core)
data_core$sum<-apply(data_core[,5:16],1,sum)
View(data_core)
library("PMCMRplus")
library("dplyr")
library("tidyverse")
library("openxlsx")
library("stringr")
library("car")
library("FSA")
library("RColorBrewer")
library("ggsignif")
library("mdthemes")
View(data_core)
data<-as.data.frame(t(data_core))
View(data)
data<-data_core
View(data)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core$sum<-apply(data_core[,5:16],1,sum)
data_core[data_core==0]<-NA
data_core<-data_core%>%
separate(ARGs.abundance.normalization.aganist.16S,into=c("type","subtype"),sep = "__")
rownames(data_core)<-data_core$subtype
data_core$type<-NULL
data_core$subtype<-NULL
View(data_core)
data<-as.data.frame(t(data_core))
data{[is.na(data)]<-0
data[is.na(data)]<-0
data$sum<-apply(data,1,sum)
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
View(data)
data<-data[,-16]
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
View(data)
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(pheatmap)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core$sum<-apply(data_core[,5:16],1,sum)
data_core[data_core==0]<-NA
data_core<-data_core%>%
separate(ARGs.abundance.normalization.aganist.16S,into=c("type","subtype"),sep = "__")
rownames(data_core)<-data_core$subtype
data_core$type<-NULL
data_core$subtype<-NULL
data<-as.data.frame(t(data_core))
data[is.na(data)]<-0
data$sum<-apply(data,1,sum)
data<-data[-16,]
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
View(data)
varaible_and_group<-bacA~location#想測試的變數跟組別
#我們必須先檢查數據是不是常態分布及變異數的同質性，才能決定我們要用的檢定方法。
#檢查數據變異數的同質性，可以使用levenes test
#如果levenes test 的結果p>0.05，那我們可以認為以這幾個組別間的變異數沒有明顯差異，他們是同質的P
{homo<-leveneTest(varaible_and_group,data = data)
homo
if (homo$`Pr(>F)`[1]>0.05){
print("data is homo")
}else{print ("data is nonhomo")}
#接著檢查數據是否是常態分布的
res.aov <- aov(varaible_and_group, data = data)
plot(res.aov,2)#這個是QQplot 可以透過這張圖來看一下有哪些點可以拿掉。
aov_residuals <- residuals(object = res.aov )
#利用shapiro.test來檢驗數據是不是常態的，如果p>0.05那麼數據就是常態的
a<-shapiro.test(x = aov_residuals)
if(a["p.value"]>0.05){
print("data is normal distribution")
}else{print("data is  not a normal distribution")}
#如果沒問題(常態且同質)就可以看ANOVA的結果了
if (a["p.value"]>0.05 && homo$`Pr(>F)`[1]>0.05){
#如果p<0.05，那表是多組間的差距是不同的，那我們可以用事後檢定來看到底是誰不一樣
print ("we can use anova ")
anova_p<-summary(res.aov)
if (anova_p[[1]]$`Pr(>F)`[1]<0.05){
print ("anova p<0.05, use TukeyHSD")
TukeyHSD(res.aov)
}else{
print("anova p>0.05,difference is insignificiant")
}
}else{
#數據在anova的兩項假設中有一項不符合，因此我們要使用kruskal-wallis來檢定
print ("use kruskal wallise rank sum test")
kruskal_output<-kruskal.test(varaible_and_group, data = data)
if (kruskal_output$p.value< 0.05){
#kruskal-wallis 檢定 p <0.05，表示組間有差距，因此我們要使用事後檢定
#我們可以使用Dunntest來看看是哪一組不同
PT = dunnTest(varaible_and_group, data = data,
method="bh")    # Can adjust p-values;
print (PT)
}else{
print ("kruskal-wallis p>0.05,difference is insignificiant")
}
}
}
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(pheatmap)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core$sum<-apply(data_core[,5:16],1,sum)
data_core[data_core==0]<-NA
data_core<-data_core%>%
separate(ARGs.abundance.normalization.aganist.16S,into=c("type","subtype"),sep = "__")
rownames(data_core)<-data_core$subtype
data_core$type<-NULL
data_core$subtype<-NULL
data_log<-log10(data_core)
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=colorRampPalette(c("#FCFBFD", "#BCBDDC", "#54278F"))(50))
data_core_sum<-apply(data_core[,2:16],2,sum)
data_sum<-apply(data[,2:16],2,sum)
data1<-as.data.frame(cbind(total_arg=data_sum,core_arg=data_core_sum))
View(data_core)
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(pheatmap)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core$sum<-apply(data_core[,5:16],1,sum)
data_core[data_core==0]<-NA
data_core<-data_core%>%
separate(ARGs.abundance.normalization.aganist.16S,into=c("type","subtype"),sep = "__")
rownames(data_core)<-data_core$subtype
data_core_sum<-apply(data_core[,2:16],2,sum)
data_sum<-apply(data[,2:16],2,sum)
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(pheatmap)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core$sum<-apply(data_core[,5:16],1,sum)
data_core[data_core==0]<-NA
data_core<-data_core%>%
separate(ARGs.abundance.normalization.aganist.16S,into=c("type","subtype"),sep = "__")
rownames(data_core)<-data_core$subtype
data_core_sum<-apply(data_core[,2:16],2,sum)
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(pheatmap)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,colNames =T)
data_core<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/plot/venn/ARG_venn.xlsx")
data_core1<-data_core$`Raw|Finished|Upstream|Midstream|Downstream`
data_core1<-data_core1[!is.na(data_core1)]
data_core1<-as.data.frame(cbind(data_core1,rep(1,26)))
colnames(data_core1)<-c("ARGs.abundance.normalization.aganist.16S","core")
data_core<-merge(data,data_core1,all.y = T,by=("ARGs.abundance.normalization.aganist.16S"))
data_core$core<-NULL
data_core$sum<-apply(data_core[,2:16],1,sum)
data_core_sum<-apply(data_core[,2:16],2,sum)
data_sum<-apply(data[,2:16],2,sum)
View(data_core)
View(data_core)
View(data_core)
rownames(data_core)<-data_core$ARGs.abundance.normalization.aganist.16S
data_core$ARGs.abundance.normalization.aganist.16S<-NULL
data_core<-as.data.frame(t(data_core))
data_core$total_arg<-data_sum
View(data_core)
data_core<-data_core[-16,]
data_core$total_arg<-data_sum
View(data_core)
data_core<-as.data.frame(t(data_core))
#相關性檢驗
library(Hmisc)
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data_core)
corr<-rcorr(data.matrix,type= 'pearson')
View(corr)
corr$P
data_core<-as.data.frame(t(data_core))
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data_core)
corr<-rcorr(data.matrix,type= 'pearson')
corr$r
write.xlsx(corr$r,"C:/Users/USER/Desktop/corr_corep.xlsx")
x<-corr$r
write.xlsx(x,"C:/Users/USER/Desktop/corr_corep.xlsx")
View(x)
x
x<-as.data.fraem(x)
write.xlsx(x,"C:/Users/USER/Desktop/corr_corep.xlsx")
x<-as.data.frame(x)
write.xlsx(x,"C:/Users/USER/Desktop/corr_corep.xlsx")
write.xlsx(x,"C:/Users/USER/Desktop/corr_corep.xlsx",rowNames=T)
x<-corr$P
x<-as.data.frame(x)
write.xlsx(x,"C:/Users/USER/Desktop/corr_corer.xlsx",rowNames=T)
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data_core)
#因為rcorr()他的input要是matrix
data_core<-data_core[-(1:3),]
data.matrix<-as.matrix(data_core)
corr<-rcorr(data.matrix,type= 'pearson')
x<-corr$P
x<-as.data.frame(x)
write.xlsx(x,"C:/Users/USER/Desktop/corr_corerwithoutraw.xlsx",rowNames=T)
x<-corr$r
x<-as.data.frame(x)
write.xlsx(x,"C:/Users/USER/Desktop/corr_corepwithoutraw.xlsx",rowNames=T)
