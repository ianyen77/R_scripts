plotdata$location[plotdata$sample=="T2-W-3"]<-"Finished"
plotdata$location[plotdata$sample=="T3-W-1"]<-"Upstream"
plotdata$location[plotdata$sample=="T3-W-2"]<-"Upstream"
plotdata$location[plotdata$sample=="T3-W-3"]<-"Upstream"
plotdata$location[plotdata$sample=="T4-W-1"]<-"Midstream"
plotdata$location[plotdata$sample=="T4-W-2"]<-"Midstream"
plotdata$location[plotdata$sample=="T4-W-3"]<-"Midstream"
plotdata$location[plotdata$sample=="T5-W-1"]<-"Downstream"
plotdata$location[plotdata$sample=="T5-W-2"]<-"Downstream"
plotdata$location[plotdata$sample=="T5-W-3"]<-"Downstream"
plotdata$location<-factor(plotdata$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean),position="dodge",color="black",stat="identity",alpha=0.9,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean),position="dodge",color="black",stat="identity",alpha=0.8,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean,color=`ARGs type`),position="dodge",stat="identity",alpha=0.8,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean,color=`ARGs type`),position="dodge",stat="identity",alpha=0.7,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")
library(openxlsx)
library(tidyverse)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames = F)
data<-data[apply(data[2:16], 1, function(x) !all(x==0)),]
colnames(data)[1]<-"ARGs type"
data$`ARGs type`<-str_to_title(data$`ARGs type`)
Sample<-colnames(data)[2:16]
data<-data%>%
gather(key = "Sample",value = "abundance",2:16)
Location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
group<-data.frame(cbind(Sample,Location))
data_stat<-merge(data,group,by = "Sample",all.x = T)%>%
group_by(`ARGs type`,Location)%>%
summarise(type_mean=mean(abundance),type_std=sd(abundance))
data_stat$Location<-factor(data_stat$Location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point()+geom_line(group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 11))
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point(color="#FFFFB3")+geom_line(color="#FFFFB3",group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 11))
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point(color="#80B1D3")+geom_line(color="#80B1D3",group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 11))
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point()+geom_line(group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 11))
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point()+geom_line(group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 12))
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point()+geom_line(group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 13))
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata <-as.data.frame(t(dbpata))
dbpata<-dbpata[,-(1:3)]
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
dbpata$sum<-apply(dbpata,1,sum)
dbpata<-dbpata[order(dbpata$sum,decreasing = T),]
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata <-as.data.frame(t(dbpata))
dbpata<-dbpata[,-(1:3)]
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
dbpata$sum<-apply(dbpata,1,sum)
dbpata<-dbpata[order(dbpata$sum,decreasing = T),]
dbpata<-dbpata[-(11:nrow(dbpata)),]
dbpata$sum<-NULL
dbpata$`ARGs Type`<-rownames(dbpata)
dbpata$`ARGs Type`[dbpata$`ARGs Type`=="macrolide-lincosamide-streptogramin"]<-"MLS"
dbpata1<-gather(data =dbpata, key ="sample",value = "value",1:(ncol(dbpata)-1))
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA")+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.8)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library("car")
library("FSA")
library("mdthemes")
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$sum<-apply(data,1,sum)
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum))
#進行pairwise統計
varaible_and_group<-sum~location#想測試的變數跟組別
{#我們必須先檢查數據是不是常態分布及變異數的同質性，才能決定我們要用的檢定方法。
#檢查數據是否是常態分布的,利用shapiro.test來檢驗數據是不是常態的，如果p>0.05那麼數據就是常態的
Data.levels<-split(data, data$location)
for(i in seq(length(Data.levels))) {
group.n<-length(Data.levels[[i]]$location)
group.name <-Data.levels[[i]]$location[1]
cat(paste("Group: ", group.name, sep=''), sep="", append=TRUE)
if (group.n < 50) {
shapiro.result<- shapiro.test(Data.levels[[i]]$sum)
cat(", Shapiro-Wilk normality test W = ", shapiro.result$statistic, " p-value = ", shapiro.result$p.value, "\n" , sep="")
} else {
ks.result<-ks.test(Data.levels[[i]]$sum, pnorm, mean(Data.levels[[i]]$sum), sd(Data.levels[[i]]$sum))
cat(", Kolmogorov-Smirnov normality test D = ", ks.result$statistic, " p-value = ", ks.result$p.value, "\n" , sep="", append=TRUE)
}
}
#檢查數據變異數的同質性，，如果levenes test 的結果p>0.05，那我們可以認為以這幾個組別間的變異數沒有明顯差異，他們是同質的P
homo<-leveneTest(varaible_and_group,data = data)
if (homo$`Pr(>F)`[1]>0.05){
print("data is homo")
}else{print ("data is nonhomo")}
#如果不同質可以用ftest來看是誰不同質
#res.ftest <- var.test(Data.levels[[1]]$bacitracin,Data.levels[[4]]$bacitracin,data = data)
#res.ftest
}
#我們必須手動去看是否是常態及同質的，如果兩者皆符合，那我們可以使用t-test
pairwise.t.test(data$sum,data$location,p.adjust.method = "BH")
?pairwise.t.test
#如果兩者中有一不符合，那我們得使用wilcoxon rank sum test
pairwise.wilcox.test(data$bacitracin,data$location,p.adjust.method = "BH")
wilcox.test(Data.levels[[4]]$sum,Data.levels[[1]]$sum,exact = F)
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
library(vegan)
library(ecodist)
library(ggplot2)
library(openxlsx)
library(RColorBrewer)
library(scatterplot3d)
library(pairwiseAdonis)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
dbpata <-as.data.frame(t(dbpata))
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
legend("bottom",col=color,legend=levels(points$location),pt.bg = colors,pch=16,inset=-0.17,xpd =T,horiz = T)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
legend("bottom",col=color,legend=levels(points$location),pt.bg = colors,pch=16,inset=-0.17,xpd =T,horiz = T)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c( 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
legend("bottom",col=color,legend=levels(points$location),pt.bg = colors,pch=16,inset=-0.17,xpd =T,horiz = T)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c( 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
legend("bottom",col=color,legend=levels(points$location),pt.bg = colors,pch=16,inset=-0.17,xpd =T,horiz = T)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
dbpata<-dbpata[-(1:3),]
groupata<-groupata[-(1:3),]
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c( 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
legend("bottom",col=color,legend=levels(points$location),pt.bg = colors,pch=16,inset=-0.17,xpd =T,horiz = T)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
legend("bottom",col=color,legend=levels(points$location),pt.bg = colors,pch=16,inset=-0.17,xpd =T,horiz = T)
