labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),legend.title= element_text(size=12.5),legend.text = element_text(size=12.5))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.8,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.75,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.7,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.75,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.75,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.75,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.7,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/SARGv2.2/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data$sum<-apply(data,1,sum)
data<-data%>%
arrange(desc(sum))
data$sum<-NULL
data_other<-data[-(1:11),]
others<-apply(data_other,2,sum)
data<-data[(1:11),]
data<-rbind(data,others)
rownames(data)[nrow(data)]<-"others"
data$`ARGs type`<-rownames(data)
data$`ARGs type`<-factor(data$`ARGs type`,levels = c("aminoglycoside","bacitracin","beta-lactam","fosfomycin","macrolide-lincosamide-streptogramin","multidrug","rifamycin","sulfonamide","tetracycline","unclassified","vancomycin","others"),labels = c("Aminoglycoside","Bacitracin","Beta-lactam","Fosfomycin","MLS","Multidrug","Rifamycin","Sulfonamide","Tetracycline","Unclassified","Vancomycin","Others"))
plotdata<-data%>%
gather(key="sample",value="amount",1:15)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FFFFB3","8DD3C7","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F","#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69","#8DD3C7")
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12),panel.grid = element_blank())
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
library(tidyverse)
library(openxlsx)
#這是用來畫ARGtype relative abundance 的script，data必須要先經過trasnform，把所有ARGtype 換成在每個樣本中的百分比
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/SARGv2.2/ARGoap_out.xlsx",sheet=2,rowNames=F,colNames=T,sep.names=" ")
dbpata1<-as.data.frame(apply(dbpata[,2:16],2,function(x) x/sum(x)))
rownames(dbpata1)<-dbpata$`Type level results`
dbpata<-dbpata1
dbpata[dbpata<0.05]<-0
data_sum<-apply(dbpata,2,sum)
dd<-1-data_sum
data2<-rbind(dbpata,dd)
rownames(data2)[25]<-"Others"
data3<-data2[apply(data2, 1, function(x) !all(x==0)),]
data3$`ARGs type`<-rownames(data3)
rownames(data3)<-NULL
data3$`ARGs type`<-factor(data3$`ARGs type`,levels = c("bacitracin","beta-lactam","fosfomycin","macrolide-lincosamide-streptogramin","multidrug","rifamycin","sulfonamide","tetracycline","unclassified","vancomycin","Others"),labels  = c("Bacitracin","Beta-lactam","Fosfomycin","MLS","Multidrug","Rifamycin","Sulfonamide","Tetracycline","Unclassified","Vancomycin","Others"))
data4<-gather(data =data3, key ="xx",value = "yf",1:15)
data5<-data4[-which(data4$yf==0),]
RColorBrewer::display.brewer.all()
RColorBrewer::display.brewer.pal(n=12,name="Set3")
RColorBrewer::brewer.pal(n=12,name="Set3")
#這樣設定是為了要配合前一張圖的顏色
#color<-c("#FFFFB3","#BEBADA","#FB8072","#80B1D3","#FDB462","#B3DE69","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F")
color<-c( "#FFFFB3" ,"#BC80BD" , "#FB8072" ,"#80B1D3" ,"#FDB462" ,"#B3DE69" ,"#FCCDE5" ,"#D9D9D9","#BEBADA" ,"#CCEBC5" ,"#FFED6F")
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.7,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.7,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12),panel.grid = element_blank())
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.7,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_classic()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data5)+
geom_bar(aes(x=xx,y=yf,fill=`ARGs type`,color=`ARGs type`),alpha=0.7,stat="identity")+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12),panel.grid = element_blank())
color<-c("#FFFFB3","8DD3C7","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F","#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69","#8DD3C7")
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/SARGv2.2/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data$sum<-apply(data,1,sum)
data<-data%>%
arrange(desc(sum))
data$sum<-NULL
data_other<-data[-(1:11),]
others<-apply(data_other,2,sum)
data<-data[(1:11),]
data<-rbind(data,others)
rownames(data)[nrow(data)]<-"others"
data$`ARGs type`<-rownames(data)
data$`ARGs type`<-factor(data$`ARGs type`,levels = c("aminoglycoside","bacitracin","beta-lactam","fosfomycin","macrolide-lincosamide-streptogramin","multidrug","rifamycin","sulfonamide","tetracycline","unclassified","vancomycin","others"),labels = c("Aminoglycoside","Bacitracin","Beta-lactam","Fosfomycin","MLS","Multidrug","Rifamycin","Sulfonamide","Tetracycline","Unclassified","Vancomycin","Others"))
plotdata<-data%>%
gather(key="sample",value="amount",1:15)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
color<-c("#FFFFB3","#8DD3C7","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F","#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69","#8DD3C7")
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean,color=`ARGs type`),position="dodge",stat="identity",alpha=0.7,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization against 16S")
color<-c( "#FFFFB3" ,"#BC80BD" , "#FB8072" ,"#80B1D3" ,"#FDB462" ,"#B3DE69" ,"#FCCDE5" ,"#D9D9D9","#BEBADA" ,"#CCEBC5" ,"#FFED6F")
color<-c( "#8DD3C7","#FFFFB3" ,"#BC80BD" , "#FB8072" ,"#80B1D3" ,"#FDB462" ,"#B3DE69" ,"#FCCDE5" ,"#D9D9D9","#BEBADA" ,"#CCEBC5" ,"#FFED6F")
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color )+scale_color_manual(values = color)+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color )+scale_color_manual(values = color)+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12),panel.grid = element_blank())
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.7)+
labs(x=NULL,y=NULL)+scale_fill_manual(values = color )+scale_color_manual(values = color)+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S rDNA")+
theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/SARGv2.2/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/standard_db/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata <-as.data.frame(t(dbpata))
#dbpata<-dbpata[,-(1:3)]
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
dbpata$sum<-apply(dbpata,1,sum)
dbpata<-dbpata[order(dbpata$sum,decreasing = T),]
dbpata<-dbpata[-(11:nrow(dbpata)),]
dbpata$sum<-NULL
dbpata$`ARGs Type`<-rownames(dbpata)
dbpata$`ARGs Type`<-str_to_title(dbpata$`ARGs Type`)
dbpata$`ARGs Type`[dbpata$`ARGs Type`=="Macrolide-Lincosamide-Streptogramin"]<-"MLS"
dbpata$`ARGs Type`[dbpata$`ARGs Type`=="Beta-Lactam"]<-"Beta-lactam"
dbpata1<-gather(data =dbpata, key ="sample",value = "value",1:(ncol(dbpata)-1))
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="The abundance of ARG normalization against 16S rDNA")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="The abundance of ARG normalization against 16S rDNA")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12),panel.grid = element_blank())
plot
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理_adjcov.xlsx",sheet=1)
library(openxlsx)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(circlize)
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理_adjcov.xlsx",sheet=1)
data_contig$contig_phyla[is.na(data_contig$contig_phyla)]<-"Unclassified"
data_contig$contig_phyla[data_contig$contig_phyla == "Bacteria"]<-"Unclassified"
data_contig$type[data_contig$type == "fosmidomycin"]<-"Others"
data_contig$type[data_contig$type == "kasugamycin"]<-"Others"
data_contig$type[data_contig$type == "sulfonamide"]<-"Others"
data_contig$type[data_contig$type == "macrolide-lincosamide-streptogramin"]<-"Others"
data_contig$type[data_contig$type == "quinolone"]<-"Others"
data_contig$type[data_contig$type == "fosfomycin"]<-"Others"
data_contig$type[data_contig$type == "unclassified"]<-"Others"
data_contig$type<-str_to_title(data_contig$type)
data_contig$type[data_contig$type == "Beta-Lactam"]<-"Beta-lactam"
data_stat<-data_contig%>%
group_by(type,contig_phyla)%>%
count(type)
data_phyl_stat<-data_contig%>%
count(contig_phyla)%>%
mutate(phyla_ACC_percent=n/248)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "sunset")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Zissou1")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Cividis")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Plasma")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Temps")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Virdis")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Viridis")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(22, "Viridis")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Viridis")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Earth")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Tropic")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Hawaii")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Roma")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Pallete3")
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Set3")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Set2")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Dark2")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "Accent")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "sunset")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
library(openxlsx)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(circlize)
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理_adjcov.xlsx",sheet=1)
data_contig$contig_phyla[is.na(data_contig$contig_phyla)]<-"Unclassified"
data_contig$contig_phyla[data_contig$contig_phyla == "Bacteria"]<-"Unclassified"
data_contig$type[data_contig$type == "fosmidomycin"]<-"Others"
data_contig$type[data_contig$type == "kasugamycin"]<-"Others"
data_contig$type[data_contig$type == "sulfonamide"]<-"Others"
data_contig$type[data_contig$type == "macrolide-lincosamide-streptogramin"]<-"Others"
data_contig$type[data_contig$type == "quinolone"]<-"Others"
data_contig$type[data_contig$type == "fosfomycin"]<-"Others"
data_contig$type[data_contig$type == "unclassified"]<-"Others"
data_contig$type<-str_to_title(data_contig$type)
data_contig$type[data_contig$type == "Beta-Lactam"]<-"Beta-lactam"
#If you want to draw data without raw ,the color is 13
#data_contig<-data_contig[-grep("T1", data_contig$Sample),]
data_stat<-data_contig%>%
group_by(type,contig_phyla)%>%
count(type)
data_phyl_stat<-data_contig%>%
count(contig_phyla)%>%
mutate(phyla_ACC_percent=n/248)
#sunset,BuPu,agsunset都很水
#https://blog.r-project.org/2019/04/01/hcl-based-color-palettes-in-grdevices/
cols <- hcl.colors(15, "sunset")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = colslink.border="black")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="black")
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="grey")
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="darkgrey")
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="#BAB")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="#BAB")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="#BABABA")
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="#581845")
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#col<-c( aminoglycoside="#8DD3C7" ,bacitracin="#FFFFB3",multidrug="#BEBADA",`beta-lactam`="#80B1D3" ,Others="#FB8072",rifamycin="#B8CAE6",tetracycline="#FDB462",vancomycin="#FCCDE5",Actinobacteria="#BEBADA", Proteobacteria="#BEBADA",Unclassified="#BEBADA",Firmicutes="#BEBADA",Planctomycetes="#BEBADA",Verrucomicrobia="#BEBADA",`Terrabacteria group`="#BEBADA")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="#79215F")
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
#col<-c( aminoglycoside="#8DD3C7" ,bacitracin="#FFFFB3",multidrug="#BEBADA",`beta-lactam`="#80B1D3" ,Others="#FB8072",rifamycin="#B8CAE6",tetracycline="#FDB462",vancomycin="#FCCDE5",Actinobacteria="#BEBADA", Proteobacteria="#BEBADA",Unclassified="#BEBADA",Firmicutes="#BEBADA",Planctomycetes="#BEBADA",Verrucomicrobia="#BEBADA",`Terrabacteria group`="#BEBADA")
chordDiagram(data_stat, annotationTrack = "grid", preAllocateTracks = 1,big.gap = 10,transparency = 0.55,grid.col = cols,link.border="black")
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE,cex=0.8,adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.length = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
