vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+ f__Sphingomonadaceae+f__Rhizobiaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+ f__Sphingomonadaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
cca.step_forward<-ordistep(cca(dbpata~1,data=envata),scope = formula(arg_cca),direction = "forward",pstep=1000)
arg_cca.0<-cca(dbpata~1,data=envata)
cca.step_forward<-step(otu.tab.0, scope = formula(arg_cca), test = "perm")
cca.step_forward<-step(arg_cca.0, scope = formula(arg_cca), test = "perm")
mod.d <- step(arg_cca.0, scope = (list(lower = formula(arg_cca.0), upper = formula(arg_cca))))
anova(arg_cca, by = "term")
View(arg_cca)
## 繪圖數據提取
s.RDA=arg_cca$CCA$u#提取樣本之特徵值
B.rda.data=data.frame(arg_cca$CCA$u[,1:2],groupata$location)
B.rda.data=data.frame(B.rda.data,groupata$sample)
colnames(B.rda.data)=c("RDA1","RDA2","Locatoin","Sample")
B.rda1 =round(RDA$CCA$eig[1]/sum(RDA$CCA$eig)*100,2) #計算第一軸特徵值之佔比
B.rda2 =round(RDA$CCA$eig[2]/sum(RDA$CCA$eig)*100,2) #計算第二軸特徵值之佔比
## 繪圖數據提取
s.RDA=arg_cca$CCA$u#提取樣本之特徵值
B.rda.data=data.frame(arg_cca$CCA$u[,1:2],groupata$location)
B.rda.data=data.frame(B.rda.data,groupata$sample)
colnames(B.rda.data)=c("RDA1","RDA2","Locatoin","Sample")
B.rda1 =round(arg_cca$CCA$eig[1]/sum(arg_cca$CCA$eig)*100,2) #計算第一軸特徵值之佔比
B.rda2 =round(arg_cca$CCA$eig[2]/sum(arg_cca$CCA$eig)*100,2) #計算第二軸特徵值之佔比
s.RDA
e.RDA=arg_cca$CCA$v # 提取變量特徵值
env.RDA=arg_cca$CCA$biplot
B.rda.env=arg_cca$CCA$biplot[,1:2]# 提取環境因子特徵值
env.RDA
# 檢查環境因子相關性
## 檢查整體環境因子對變量變化之相關性的顯著性
RDA.perm=permutest(arg_cca,permu=999)
RDA.perm
## 檢查整體環境因子對變量變化之相關性的顯著性
RDA.env=envfit(arg_cca,envata,permu=999)
RDA.env
B.plot=ggplot(data=B.rda.data,aes(RDA1,RDA2),color=locatoin)+
geom_point(aes(color=locatoin,fill=locatoin),size=2)+geom_text(aes(label=Sample),size=3,color="black")+
#scale_color_manual(values=c("red","blue","green","black","grey","darkgreen"))+
labs(x=paste("RDA1",B.rda1," %"),y=paste("RDA2",B.rda2," %"))+
theme_bw()
B.plot=B.plot+theme(panel.grid=element_blank())+
geom_hline(yintercept = 0)+geom_vline(xintercept = 0)+
geom_segment(data=B.rda.env,aes(x=0,y=0,xend=B.rda.env[,1],yend=B.rda.env[,2]),colour="grey ",size=1,
arrow=arrow(angle = 35,length=unit(0.3,"cm")))+
geom_text(data=B.rda.env,aes(x=B.rda.env[,1],y=B.rda.env[,2],label=rownames(B.rda.env)),size=2.6,
colour="black",vjust=(0.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]),hjust=(1.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]))+
theme(legend.position = "top")#+theme(axis.title = element_text(family = "serif", face = "bold", size = 18,colour = "black"))
print(B.plot)
View(B.rda.data)
B.plot=ggplot(data=B.rda.data,aes(RDA1,RDA2),color=locatoin)+
geom_point(aes(color=Locatoin,fill=Locatoin),size=2)+geom_text(aes(label=Sample),size=3,color="black")+
#scale_color_manual(values=c("red","blue","green","black","grey","darkgreen"))+
labs(x=paste("RDA1",B.rda1," %"),y=paste("RDA2",B.rda2," %"))+
theme_bw()
print(B.plot)
B.plot=B.plot+theme(panel.grid=element_blank())+
geom_hline(yintercept = 0)+geom_vline(xintercept = 0)+
geom_segment(data=B.rda.env,aes(x=0,y=0,xend=B.rda.env[,1],yend=B.rda.env[,2]),colour="grey ",size=1,
arrow=arrow(angle = 35,length=unit(0.3,"cm")))+
geom_text(data=B.rda.env,aes(x=B.rda.env[,1],y=B.rda.env[,2],label=rownames(B.rda.env)),size=2.6,
colour="black",vjust=(0.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]),hjust=(1.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]))+
theme(legend.position = "top")#+theme(axis.title = element_text(family = "serif", face = "bold", size = 18,colour = "black"))
print(B.plot)
View(B.rda.data)
View(B.rda.data)
#必須先取得pathogen list
pathogen_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames = T,rowNames =T)
library(openxlsx)
library(tidyverse)
library(Hmisc)
#必須先取得pathogen list
pathogen_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames = T,rowNames =T)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
#必須先取得pathogen list
pathogen_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames = T,rowNames =T)
#必須先取得pathogen list
pathogen_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames = F,rowNames =T)
#必須先取得pathogen list
pathogen_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames = F,rowNames =T)
#必須先取得pathogen list
pathogen_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames =T,rowNames =F)
pathogen_species<-read.xlsx("c:/Users/USER/Desktop/pathogen/pathogen_species_insample.xlsx",sheet=1,colNames = T,rowNames = T)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
#必須先取得pathogen list
taxa_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames =T,rowNames =F)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
taxa_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames =T,rowNames =F)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
#去除過少的pathogen,genus的標準是>0.1%,sepcies的標準是>0.01%
rownames(taxa_genus)<-taxa_genus$Genus
taxa_genus<-taxa_genus[,-(1:7)]
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(taxa_genus))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
data<-as.data.frame(t(data))
View(data)
taxa_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames =T,rowNames =F)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
#去除過少的pathogen,genus的標準是>0.1%,sepcies的標準是>0.01%
rownames(taxa_genus)<-taxa_genus$Genus
taxa_genus<-taxa_genus[,-(1:7)]
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(taxa_genus))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
gc()
#必須先取得pathogen list
taxa_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames =T,rowNames =F)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
#去除過少的pathogen,genus的標準是>0.1%,sepcies的標準是>0.01%
rownames(taxa_genus)<-taxa_genus$Genus
taxa_genus<-taxa_genus[,-(1:7)]
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(taxa_genus))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
library(openxlsx)
library(tidyverse)
library(Hmisc)
#必須先取得pathogen list
taxa_genus<-read.xlsx("c:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,colNames =T,rowNames =F)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
View(data_ARGsub)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa$n<-NULL
data_taxa$Genus<-NULL
View(data_taxa)
data_taxa<-data_taxa[,-(1:7)]
View(data_taxa)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:7)]
View(data_taxa)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:8)]
View(data_taxa)
data_taxa<-data_taxa[apply(data_taxa, 1, function(x) !all(x==0)),]
data_ARGsub<-data_ARGsub[apply(data_ARGsub, 1, function(x) !all(x==0)),]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
data_ARGsub<-data_ARGsub[apply(data_ARGsub, 1, function(x) !all(x==0)),]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:8)]
data_taxa<-data_taxa[apply(data_taxa, 1, function(x) !all(x==0)),]
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
View(data)
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.9] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
corr_final.dataframe<-corr_final.dataframe[apply(corr_final.dataframe, 1, function(x) !all(x==0)),]
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
data_ARGsub<-data_ARGsub[apply(data_ARGsub, 1, function(x) !all(x==0)),]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:8)]
data_taxa<-data_taxa[apply(data_taxa, 1, function(x) !all(x==0)),]
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
View(data_taxa)
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
data_taxa<-arrange(data_taxa, desc(sum))
data_taxa<-data_taxa[,1:100]
data_taxa$sum<-NULL
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.9] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
corr_final.dataframe<-corr_final.dataframe[apply(corr_final.dataframe, 1, function(x) !all(x==0)),]
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
View(data_taxa)
View(data_taxa)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
data_ARGsub<-data_ARGsub[apply(data_ARGsub, 1, function(x) !all(x==0)),]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:8)]
data_taxa<-data_taxa[apply(data_taxa, 1, function(x) !all(x==0)),]
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
data_taxa<-arrange(data_taxa, desc(sum))
View(data_taxa)
data_taxa<-data_taxa[,1:100]
data_taxa<-data_taxa[1:100,]
data_taxa$sum<-NULL
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
#data<-as.data.frame(t(data))
#計算出現次數
data_clean<-data
data_clean[data_clean!=0]<-1
data_clean$times_discover_in_all<-apply(data_clean,1,sum)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
data_ARGsub<-data_ARGsub[apply(data_ARGsub, 1, function(x) !all(x==0)),]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:8)]
data_taxa<-data_taxa[apply(data_taxa, 1, function(x) !all(x==0)),]
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
data_taxa<-arrange(data_taxa, desc(sum))
data_taxa<-data_taxa[1:100,]
data_taxa$sum<-NULL
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.9] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
corr_final.dataframe<-corr_final.dataframe[apply(corr_final.dataframe, 1, function(x) !all(x==0)),]
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
corr_final.dataframe<-corr_final.dataframe[apply(corr_final.dataframe, 1, function(x) !all(x==0)),]
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
View(argclass)
library("openxlsx")
library("ggplot2")
library("tidyverse")
library(RColorBrewer)
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
