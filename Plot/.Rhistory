labs(x=NULL,y=NULL)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
data$subtype<-factor(data$subtype,levels = c("IS26","IS91","IS1166","intI1","tnpA","tnpA1","tnpA13","tnpA2","tnpA3","tniA","tniB","Others"))
plotdata<-data%>%
gather(key="sample",value="amount",1:15)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
brewer.pal(n=12,name="Set3")
display.brewer.pal(n=12,name="Set3")
data$subtype<-factor(data$subtype,levels = c("intI1","IS26","IS91","IS1166","tnpA","tnpA1","tnpA13","tnpA2","tnpA3","tniA","tniB","Others"))
plotdata<-data%>%
gather(key="sample",value="amount",1:15)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_manual(color=color)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()+
guides(fill=guide_legend(title="MGEs"))
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()+
guides(fill=guide_legend(title="MGEs"),color=guide_legend(title="MGEs"))
library(openxlsx)
library(tidyverse)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames = F)
data<-data[apply(data[2:16], 1, function(x) !all(x==0)),]
colnames(data)[1]<-"ARGs type"
data$`ARGs type`<-str_to_title(data$`ARGs type`)
Sample<-colnames(data)[2:16]
data<-data%>%
gather(key = "Sample",value = "abundance",2:16)
Location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames = F)
data<-data[apply(data[2:16], 1, function(x) !all(x==0)),]
colnames(data)[1]<-"ARGs type"
data$`ARGs type`<-str_to_title(data$`ARGs type`)
Sample<-colnames(data)[2:16]
data<-data%>%
gather(key = "Sample",value = "abundance",2:16)
Location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
group<-data.frame(cbind(Sample,Location))
data_stat<-merge(data,group,by = "Sample",all.x = T)%>%
group_by(`ARGs type`,Location)%>%
summarise(type_mean=mean(abundance),type_std=sd(abundance))
data_stat$Location<-factor(data_stat$Location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point()+geom_line(group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 13))
View(data_stat)
View(data_stat)
data_atat$`ARGs Type`[data_atat$`ARGs Type`=="Macrolide-Lincosamide-Streptogramin"]<-"Macrolide-lincosamide-streptogramin"
data_stat$`ARGs Type`[data_stat$`ARGs Type`=="Beta-Lactam"]<-"Beta-lactam"
data_stat$`ARGs type`[data_stat$`ARGs type`=="Macrolide-Lincosamide-Streptogramin"]<-"Macrolide-lincosamide-streptogramin"
data_stat$`ARGs type`[data_stat$`ARGs type`=="Beta-Lactam"]<-"Beta-lactam"
ggplot(data_stat,aes(x=Location,y=type_mean,ymin=type_mean-type_std,ymax=type_mean+type_std))+geom_point()+geom_line(group=1)+theme_bw()+geom_errorbar(width=0.1)+
facet_wrap(~`ARGs type`,nrow = 5,scales = 'free')+labs(x="Location",y="ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=11.5),strip.text = element_text(size = 13))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data$sum<-apply(data,1,sum)
data<-data%>%
arrange(desc(sum))
data$sum<-NULL
data_other<-data[-(1:11),]
others<-apply(data_other,2,sum)
data<-data[(1:11),]
data<-rbind(data,others)
rownames(data)[nrow(data)]<-"others"
data$`ARGs type`<-rownames(data)
data$`ARGs type`<-factor(data$`ARGs type`,levels = c("aminoglycoside","bacitracin","beta-lactam","fosfomycin","macrolide-lincosamide-streptogramin","multidrug","rifamycin","sulfonamide","tetracycline","unclassified","vancomycin","others"),labels = c("Aminoglycoside","Bacitracin","Beta-lactam","Fosfomycin","MLS","Multidrug","Rifamycin","Sulfonamide","Tetracycline","Unclassified","Vancomycin","Others"))
plotdata<-data%>%
gather(key="sample",value="amount",1:15)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FFFFB3","8DD3C7","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F","#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69","#8DD3C7")
plotdata$location[plotdata$sample=="T1-W-1"]<-"Raw"
plotdata$location[plotdata$sample=="T1-W-2"]<-"Raw"
plotdata$location[plotdata$sample=="T1-W-3"]<-"Raw"
plotdata$location[plotdata$sample=="T2-W-1"]<-"Finished"
plotdata$location[plotdata$sample=="T2-W-2"]<-"Finished"
plotdata$location[plotdata$sample=="T2-W-3"]<-"Finished"
plotdata$location[plotdata$sample=="T3-W-1"]<-"Upstream"
plotdata$location[plotdata$sample=="T3-W-2"]<-"Upstream"
plotdata$location[plotdata$sample=="T3-W-3"]<-"Upstream"
plotdata$location[plotdata$sample=="T4-W-1"]<-"Midstream"
plotdata$location[plotdata$sample=="T4-W-2"]<-"Midstream"
plotdata$location[plotdata$sample=="T4-W-3"]<-"Midstream"
plotdata$location[plotdata$sample=="T5-W-1"]<-"Downstream"
plotdata$location[plotdata$sample=="T5-W-2"]<-"Downstream"
plotdata$location[plotdata$sample=="T5-W-3"]<-"Downstream"
plotdata$location<-factor(plotdata$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean,color=`ARGs type`),position="dodge",stat="identity",alpha=0.7,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean,color=`ARGs type`),position="dodge",stat="identity",alpha=0.7,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization against 16S")
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data$sum<-apply(data,1,sum)
data<-data%>%
arrange(desc(sum))
data$sum<-NULL
data_other<-data[-(1:11),]
others<-apply(data_other,2,sum)
data<-data[(1:11),]
data<-rbind(data,others)
rownames(data)[nrow(data)]<-"others"
data$`ARGs type`<-rownames(data)
data$`ARGs type`<-factor(data$`ARGs type`,levels = c("aminoglycoside","bacitracin","beta-lactam","fosfomycin","macrolide-lincosamide-streptogramin","multidrug","rifamycin","sulfonamide","tetracycline","unclassified","vancomycin","others"),labels = c("Aminoglycoside","Bacitracin","Beta-lactam","Fosfomycin","MLS","Multidrug","Rifamycin","Sulfonamide","Tetracycline","Unclassified","Vancomycin","Others"))
plotdata<-data%>%
gather(key="sample",value="amount",1:15)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FFFFB3","8DD3C7","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F","#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69","#8DD3C7")
plotdata$location[plotdata$sample=="T1-W-1"]<-"Raw"
plotdata$location[plotdata$sample=="T1-W-2"]<-"Raw"
plotdata$location[plotdata$sample=="T1-W-3"]<-"Raw"
plotdata$location[plotdata$sample=="T2-W-1"]<-"Finished"
plotdata$location[plotdata$sample=="T2-W-2"]<-"Finished"
plotdata$location[plotdata$sample=="T2-W-3"]<-"Finished"
plotdata$location[plotdata$sample=="T3-W-1"]<-"Upstream"
plotdata$location[plotdata$sample=="T3-W-2"]<-"Upstream"
plotdata$location[plotdata$sample=="T3-W-3"]<-"Upstream"
plotdata$location[plotdata$sample=="T4-W-1"]<-"Midstream"
plotdata$location[plotdata$sample=="T4-W-2"]<-"Midstream"
plotdata$location[plotdata$sample=="T4-W-3"]<-"Midstream"
plotdata$location[plotdata$sample=="T5-W-1"]<-"Downstream"
plotdata$location[plotdata$sample=="T5-W-2"]<-"Downstream"
plotdata$location[plotdata$sample=="T5-W-3"]<-"Downstream"
plotdata$location<-factor(plotdata$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean,color=`ARGs type`),position="dodge",stat="identity",alpha=0.7,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")
plotdata%>%
group_by(`ARGs type`,location)%>%
summarise(mean=mean(amount),std=sd(amount))%>%
ggplot(aes(x=location,y=mean,ymin=mean-std, ymax=mean+std,fill=`ARGs type`))+
geom_bar(aes(y=mean,color=`ARGs type`),position="dodge",stat="identity",alpha=0.7,width = 0.9)+geom_errorbar(width=0.9,position=position_dodge())+theme_bw()+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+xlab("Sample")+ylab("ARGs abundance normalization against 16S")
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata <-as.data.frame(t(dbpata))
dbpata<-dbpata[,-(1:3)]
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
dbpata$sum<-apply(dbpata,1,sum)
dbpata<-dbpata[order(dbpata$sum,decreasing = T),]
dbpata<-dbpata[-(11:nrow(dbpata)),]
dbpata$sum<-NULL
dbpata$`ARGs Type`<-rownames(dbpata)
dbpata$`ARGs Type`<-str_to_title(dbpata$`ARGs Type`)
dbpata$`ARGs Type`[dbpata$`ARGs Type`=="Beta-Lactam"]<-"Beta-lactam"
dbpata1<-gather(data =dbpata, key ="sample",value = "value",1:(ncol(dbpata)-1))
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata <-as.data.frame(t(dbpata))
dbpata<-dbpata[,-(1:3)]
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
dbpata$sum<-apply(dbpata,1,sum)
dbpata<-dbpata[order(dbpata$sum,decreasing = T),]
dbpata<-dbpata[-(11:nrow(dbpata)),]
dbpata$sum<-NULL
dbpata$`ARGs Type`<-rownames(dbpata)
dbpata$`ARGs Type`<-str_to_title(dbpata$`ARGs Type`)
View(dbpata)
dbpata$`ARGs Type`[dbpata$`ARGs Type`=="Macrolide-Lincosamide-Streptogramin"]<-"MLS"
dbpata$`ARGs Type`[dbpata$`ARGs Type`=="Beta-Lactam"]<-"Beta-lactam"
dbpata1<-gather(data =dbpata, key ="sample",value = "value",1:(ncol(dbpata)-1))
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library("car")
library("FSA")
library("mdthemes")
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$sum<-apply(data,1,sum)
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum))
#進行pairwise統計
varaible_and_group<-sum~location#想測試的變數跟組別
{#我們必須先檢查數據是不是常態分布及變異數的同質性，才能決定我們要用的檢定方法。
#檢查數據是否是常態分布的,利用shapiro.test來檢驗數據是不是常態的，如果p>0.05那麼數據就是常態的
Data.levels<-split(data, data$location)
for(i in seq(length(Data.levels))) {
group.n<-length(Data.levels[[i]]$location)
group.name <-Data.levels[[i]]$location[1]
cat(paste("Group: ", group.name, sep=''), sep="", append=TRUE)
if (group.n < 50) {
shapiro.result<- shapiro.test(Data.levels[[i]]$sum)
cat(", Shapiro-Wilk normality test W = ", shapiro.result$statistic, " p-value = ", shapiro.result$p.value, "\n" , sep="")
} else {
ks.result<-ks.test(Data.levels[[i]]$sum, pnorm, mean(Data.levels[[i]]$sum), sd(Data.levels[[i]]$sum))
cat(", Kolmogorov-Smirnov normality test D = ", ks.result$statistic, " p-value = ", ks.result$p.value, "\n" , sep="", append=TRUE)
}
}
#檢查數據變異數的同質性，，如果levenes test 的結果p>0.05，那我們可以認為以這幾個組別間的變異數沒有明顯差異，他們是同質的P
homo<-leveneTest(varaible_and_group,data = data)
if (homo$`Pr(>F)`[1]>0.05){
print("data is homo")
}else{print ("data is nonhomo")}
#如果不同質可以用ftest來看是誰不同質
#res.ftest <- var.test(Data.levels[[1]]$bacitracin,Data.levels[[4]]$bacitracin,data = data)
#res.ftest
}
#我們必須手動去看是否是常態及同質的，如果兩者皆符合，那我們可以使用t-test
pairwise.t.test(data$sum,data$location,p.adjust.method = "BH")
?pairwise.t.test
#如果兩者中有一不符合，那我們得使用wilcoxon rank sum test
pairwise.wilcox.test(data$bacitracin,data$location,p.adjust.method = "BH")
wilcox.test(Data.levels[[4]]$sum,Data.levels[[1]]$sum,exact = F)
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/MGE/plot/MGEblastoutform.xlsx",sheet=1,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$sum<-apply(data,1,sum)
data<-data%>%
arrange(desc(sum))
data$sum<-NULL
data_other<-data[-(1:11),]
others<-apply(data_other,2,sum)
data<-data[(1:11),]
data<-rbind(data,others)
rownames(data)[nrow(data)]<-"others"
data$`ARGs type`<-rownames(data)
data<-separate(data,`ARGs type`,into = c("type","subtype"),sep = "__")
data[12,17]<-"Others"
data$subtype<-factor(data$subtype,levels = c("intI1","IS26","IS91","IS1166","tnpA","tnpA1","tnpA13","tnpA2","tnpA3","tniA","tniB","Others"))
plotdata<-data%>%
gather(key="sample",value="amount",1:15)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization aganist 16S")+theme_bw()+
guides(fill=guide_legend(title="MGEs"),color=guide_legend(title="MGEs"))
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=subtype,color=subtype),stat="identity",alpha=0.9)+
scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()+
guides(fill=guide_legend(title="MGEs"),color=guide_legend(title="MGEs"))
library(vegan)
library(ecodist)
library(ggplot2)
library(openxlsx)
library(ggfortify)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/family_rel_table.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/family_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
View(envata)
envata<-envata[,-c(1:4)]
View(envata)
envata<-envata[,-c(2:3)]
View(envata)
View(envata)
rownames(envata)<-envata$Family
envata$Family<-NULL
envata <- decostand(envata, method = 'hellinger')
sel <- decorana(dbpata)
sel
dbpata<-dbpata[apply(data[2:16], 2, function(x) !all(x==0)),]
dbpata<-dbpata[apply(data, 2, function(x) !all(x==0)),]
dbpata<-dbpata[apply(dbpata, 2, function(x) !all(x==0)),]
View(dbpata)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/family_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-envata[,-c(1:4)]
envata<-envata[,-c(2:3)]
rownames(envata)<-envata$Family
envata$Family<-NULL
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
envata <- decostand(envata, method = 'hellinger')
sel <- decorana(dbpata)
sel
View(envata)
arg_cca<-cca(dbpata ~., data=envata)
dbpata<-as.data.frame(t(dbpata))
envata<-as.data.frame(t(envata))
arg_cca<-cca(dbpata ~., data=envata)
arg.cca
summary(arg.cca)
View(arg_cca)
arg_cca
arg_cca
summary(arg.cca)
summary(arg_cca)
plot(arg_cca)
vif.cca(arg_cca)
View(envata)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/family_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-envata[,-c(1:4)]
envata<-envata[,-c(2:3)]
rownames(envata)<-envata$Family
envata$Family<-NULL
View(envata)
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
envata$sum<-apply(envata,1,sum)
envata%>%
arrange(desc(sum))
library(tidyverse)
envata%>%
arrange(desc(sum))
envata<-envata%>%
arrange(desc(sum))
envata<-envata[1:30,]
envata <- decostand(envata, method = 'hellinger')
sel <- decorana(dbpata)
sel
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/family_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
envata<-envata[,-c(1:4)]
envata<-envata[,-c(2:3)]
rownames(envata)<-envata$Family
envata$Family<-NULL
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
envata$sum<-apply(envata,1,sum)
envata<-envata%>%
arrange(desc(sum))
envata<-envata[1:30,]
envata$sum<-NULL
envata <- decostand(envata, method = 'hellinger')
sel <- decorana(dbpata)
sel
dbpata<-as.data.frame(t(dbpata))
envata<-as.data.frame(t(envata))
arg_cca<-cca(dbpata ~., data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Rhodobacteraceae+f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Xanthobacteraceae+f__Comamonadaceae+ f__Sphingomonadaceae+  f__Clostridiaceae+f__Rhizobiaceae+f__Roseobacteraceae+f__Phyllobacteriaceae+f__Nocardioidaceae+f__Micromonosporaceae+f__Methylobacteriaceae, data=envata)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Rhodobacteraceae+f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Xanthobacteraceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae+f__Roseobacteraceae+f__Phyllobacteriaceae+f__Nocardioidaceae+f__Micromonosporaceae+f__Methylobacteriaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Xanthobacteraceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae+f__Roseobacteraceae+f__Phyllobacteriaceae+f__Nocardioidaceae+f__Micromonosporaceae+f__Methylobacteriaceae, data=envata)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Xanthobacteraceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae+f__Roseobacteraceae+f__Nocardioidaceae+f__Micromonosporaceae+f__Methylobacteriaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae+f__Roseobacteraceae+f__Nocardioidaceae+f__Micromonosporaceae+f__Methylobacteriaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
RDA=rda(dbpata,envata,scale=TRUE)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae+f__Nocardioidaceae+f__Micromonosporaceae+f__Methylobacteriaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae+f__Micromonosporaceae+f__Methylobacteriaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae+f__Micromonosporaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+f__Comamonadaceae+ f__Sphingomonadaceae+f__Rhizobiaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+ f__Sphingomonadaceae+f__Rhizobiaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
arg_cca<-cca(dbpata ~f__Mycobacteriaceae+f__Nitrobacteraceae+ f__Bacillaceae+ f__Sphingomonadaceae, data=envata)
arg_cca
summary(arg_cca)
vif.cca(arg_cca)
cca.step_forward<-ordistep(cca(dbpata~1,data=envata),scope = formula(arg_cca),direction = "forward",pstep=1000)
arg_cca.0<-cca(dbpata~1,data=envata)
cca.step_forward<-step(otu.tab.0, scope = formula(arg_cca), test = "perm")
cca.step_forward<-step(arg_cca.0, scope = formula(arg_cca), test = "perm")
mod.d <- step(arg_cca.0, scope = (list(lower = formula(arg_cca.0), upper = formula(arg_cca))))
anova(arg_cca, by = "term")
View(arg_cca)
## 繪圖數據提取
s.RDA=arg_cca$CCA$u#提取樣本之特徵值
B.rda.data=data.frame(arg_cca$CCA$u[,1:2],groupata$location)
B.rda.data=data.frame(B.rda.data,groupata$sample)
colnames(B.rda.data)=c("RDA1","RDA2","Locatoin","Sample")
B.rda1 =round(RDA$CCA$eig[1]/sum(RDA$CCA$eig)*100,2) #計算第一軸特徵值之佔比
B.rda2 =round(RDA$CCA$eig[2]/sum(RDA$CCA$eig)*100,2) #計算第二軸特徵值之佔比
## 繪圖數據提取
s.RDA=arg_cca$CCA$u#提取樣本之特徵值
B.rda.data=data.frame(arg_cca$CCA$u[,1:2],groupata$location)
B.rda.data=data.frame(B.rda.data,groupata$sample)
colnames(B.rda.data)=c("RDA1","RDA2","Locatoin","Sample")
B.rda1 =round(arg_cca$CCA$eig[1]/sum(arg_cca$CCA$eig)*100,2) #計算第一軸特徵值之佔比
B.rda2 =round(arg_cca$CCA$eig[2]/sum(arg_cca$CCA$eig)*100,2) #計算第二軸特徵值之佔比
s.RDA
e.RDA=arg_cca$CCA$v # 提取變量特徵值
env.RDA=arg_cca$CCA$biplot
B.rda.env=arg_cca$CCA$biplot[,1:2]# 提取環境因子特徵值
env.RDA
# 檢查環境因子相關性
## 檢查整體環境因子對變量變化之相關性的顯著性
RDA.perm=permutest(arg_cca,permu=999)
RDA.perm
## 檢查整體環境因子對變量變化之相關性的顯著性
RDA.env=envfit(arg_cca,envata,permu=999)
RDA.env
B.plot=ggplot(data=B.rda.data,aes(RDA1,RDA2),color=locatoin)+
geom_point(aes(color=locatoin,fill=locatoin),size=2)+geom_text(aes(label=Sample),size=3,color="black")+
#scale_color_manual(values=c("red","blue","green","black","grey","darkgreen"))+
labs(x=paste("RDA1",B.rda1," %"),y=paste("RDA2",B.rda2," %"))+
theme_bw()
B.plot=B.plot+theme(panel.grid=element_blank())+
geom_hline(yintercept = 0)+geom_vline(xintercept = 0)+
geom_segment(data=B.rda.env,aes(x=0,y=0,xend=B.rda.env[,1],yend=B.rda.env[,2]),colour="grey ",size=1,
arrow=arrow(angle = 35,length=unit(0.3,"cm")))+
geom_text(data=B.rda.env,aes(x=B.rda.env[,1],y=B.rda.env[,2],label=rownames(B.rda.env)),size=2.6,
colour="black",vjust=(0.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]),hjust=(1.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]))+
theme(legend.position = "top")#+theme(axis.title = element_text(family = "serif", face = "bold", size = 18,colour = "black"))
print(B.plot)
View(B.rda.data)
B.plot=ggplot(data=B.rda.data,aes(RDA1,RDA2),color=locatoin)+
geom_point(aes(color=Locatoin,fill=Locatoin),size=2)+geom_text(aes(label=Sample),size=3,color="black")+
#scale_color_manual(values=c("red","blue","green","black","grey","darkgreen"))+
labs(x=paste("RDA1",B.rda1," %"),y=paste("RDA2",B.rda2," %"))+
theme_bw()
print(B.plot)
B.plot=B.plot+theme(panel.grid=element_blank())+
geom_hline(yintercept = 0)+geom_vline(xintercept = 0)+
geom_segment(data=B.rda.env,aes(x=0,y=0,xend=B.rda.env[,1],yend=B.rda.env[,2]),colour="grey ",size=1,
arrow=arrow(angle = 35,length=unit(0.3,"cm")))+
geom_text(data=B.rda.env,aes(x=B.rda.env[,1],y=B.rda.env[,2],label=rownames(B.rda.env)),size=2.6,
colour="black",vjust=(0.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]),hjust=(1.5-sign(B.rda.env[,1]))/2,angle=(45)*atan(B.rda.env[,2]/B.rda.env[,1]))+
theme(legend.position = "top")#+theme(axis.title = element_text(family = "serif", face = "bold", size = 18,colour = "black"))
print(B.plot)
View(B.rda.data)
View(B.rda.data)
