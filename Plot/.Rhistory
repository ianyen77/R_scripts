data_stat1<-data_contig%>%
select(Sample,type,contig_phyla,contig_taxon.x)
colnames(data_stat1)<-c('Sample','type','phyla',"contig_taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long(Sample,type,phyla,contig_taxon)
data_sankey$node<-fct_rev(factor(data_sankey$node))
pl <- ggplot(data_sankey, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size = 3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.1))
pl <- pl +  theme_bw()
pl <- pl + theme(legend.position = "none")
pl <- pl +  theme(axis.title = element_blank()
, axis.text.y = element_blank()
, axis.ticks = element_blank()
, panel.grid = element_blank())
cols <- hcl.colors(65, "sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
data_contig<-data_contig[-grep("Actinobacteria",data_contig$contig_phyla),]
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
data_stat<-data_contig%>%
group_by(type,contig_phyla)%>%
count(type)%>%
mutate(type_ACC_percent=n/sum(n))
data_stat1<-data_contig%>%
select(contig_phyla,Sample,type,subtype,contig_taxon.x)
colnames(data_stat1)<-c('Phyla','Sample','ARG type ',"ARG subtype","contig_taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long(Sample,type,phyla,contig_taxon)
data_sankey$node<-fct_rev(factor(data_sankey$node))
pl <- ggplot(data_sankey, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size = 3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.1))
pl <- pl +  theme_bw()
pl <- pl + theme(legend.position = "none")
pl <- pl +  theme(axis.title = element_blank()
, axis.text.y = element_blank()
, axis.ticks = element_blank()
, panel.grid = element_blank())
cols <- hcl.colors(65, "sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
data_stat1<-data_contig%>%
select(contig_phyla,Sample,type,subtype,contig_taxon.x)
colnames(data_stat1)<-c('Phyla','Sample','ARG type ',"ARG subtype","contig_taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long('Phyla','Sample','ARG type ',"ARG subtype","contig_taxon")
data_sankey$node<-fct_rev(factor(data_sankey$node))
pl <- ggplot(data_sankey, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size = 3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.1))
pl <- pl +  theme_bw()
pl <- pl + theme(legend.position = "none")
pl <- pl +  theme(axis.title = element_blank()
, axis.text.y = element_blank()
, axis.ticks = element_blank()
, panel.grid = element_blank())
cols <- hcl.colors(65, "sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
cols <- hcl.colors(20, "Purple")
cols <- hcl.colors(20, "Purples")
pl <- pl + scale_fill_manual(values=cols)
pl
cols <- hcl.colors(30, "Purples")
pl <- pl + scale_fill_manual(values=cols)
pl
cols <- hcl.colors(30, "Viridis")
pl <- pl + scale_fill_manual(values=cols)
pl
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
cols <- hcl.colors(30, "Set3")
pl <- pl + scale_fill_manual(values=cols)
pl
data_sankey<- data_stat1%>%
make_long('Phyla','ARG type ',"ARG subtype","contig_taxon")
#data_sankey$node<-fct_rev(factor(data_sankey$node))
pl <- ggplot(data_sankey, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size = 3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.1))
pl <- pl +  theme_bw()
pl <- pl + theme(legend.position = "none")
pl <- pl +  theme(axis.title = element_blank()
, axis.text.y = element_blank()
, axis.ticks = element_blank()
, panel.grid = element_blank())
cols <- hcl.colors(30, "Set3")
pl <- pl + scale_fill_manual(values=cols)
pl
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
colnames(data_stat1)<-c('Phyla','Sample','ARG type ',"ARG subtype","ARC_Taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long('Sample','ARG type ',"ARG subtype","contig_taxon")
data_sankey$node<-fct_rev(factor(data_sankey$node))
pl <- ggplot(data_sankey, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size = 3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.1))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(30, "sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(31, "Plasma")
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
cols <- hcl.colors(12, "Sunset")
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_manual(values = cols)+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`),color="black",stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_manual(values = cols)+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
reagg <- data_sankey%>%
dplyr::group_by(node)%>%  # Here we are grouping the data by node and then we are taking the frequency of it
tally()
df2 <- merge(data_sankey,
reagg,
by.x = 'node',
by.y = 'node',
all.x = TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/ARG subtype heatmeap_temp.R", echo=TRUE)
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=colorRampPalette(c("#FCFBFD", "#BCBDDC", "#54278F"))(50))
cols <- hcl.colors(50, "sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(100, "sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Purples")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- rev(hcl.colors(300, "Purples"))
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
source("~/GitHub/R_scripts/Plot/ARG subtype heatmeap_temp.R", echo=TRUE)
cols <- rev(hcl.colors(300, "Viridis"))
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Viridis")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Viridis")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "ag_Sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "BuPu")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Inferno")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Blue-Yellow")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Blue-Yellow3")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Temps")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Plasma")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Purp")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Purple")
cols <- hcl.colors(300, "Purples")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "TealRose")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
source("~/GitHub/R_scripts/Plot/PCOA_adonistest.R", echo=TRUE)
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
source("~/GitHub/R_scripts/Plot/PCOA_adonistest.R", echo=TRUE)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#這個不一定要，下面這個只是把全部都是0的rows清掉
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
dbpata <-as.data.frame(t(dbpata))
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata.dist <- vegdist(dbpata, method="bray", binary=F)
#檢驗Adonis是不是因為betadispersion造成的
dispersion <- betadisper(dbpata.dist, group=groupata$location)
permutest(dispersion)
dbpata_adonis <- paste0(" adonis R2: ",round(dune.div$R2,2), "; P-value: ", dune.div$`Pr(>F)`)
View(x)
dbpata_adonis <- paste0(" adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#開始畫圖，先選色
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha-0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
rownames(dbpata)
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
View(points)
source("~/GitHub/R_scripts/Plot/PCOA_adonistest.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
rownams(dbpata)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
rownam(dbpata)
library(vegan)
library(ecodist)
library(ggplot2)
library(openxlsx)
library(RColorBrewer)
library(scatterplot3d)
library(pairwiseAdonis)
library(tidyverse)
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownames(dbpata)<-dbpata$Species
library(vegan)
library(ecodist)
library(ggplot2)
library(tidyverse)
library(openxlsx)
library(RColorBrewer)
library(scatterplot3d)
library(pairwiseAdonis)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownames(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#dune.pairwise.adonis <- pairwise.adonis(x=dbpata, factors=groupata$location, sim.function = "vegdist",sim.method = "bray",reduce = NULL,perm = 999)
#準備畫圖
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
#if you use the Rcolor brewer,你需要利用scale_color_brewer(palette="paletee_name")
#自選顏色的話用Scale_color_manual(values=color_vector)
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legen
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
source("~/GitHub/R_scripts/Plot/Procrustes Analysis.R", echo=TRUE)
arg_bray
arg_bray<-as.data.frame(arg_bray)
arg_bray<-as.matrix(arg_bray)
View(arg_bray)
taxa_bray<-as.matrix(taxa_bray)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownames(dbpata)<-dbpata$Species
