data_contig$type[data_contig$type == "unclassified"]<-"Others"
data_contig$type<-str_to_title(data_contig$type)
data_contig$type[data_contig$type == "Beta-Lactam"]<-"Beta-lactam"
data_contig$type[data_contig$type == "Macrolide-Lincosamide-Streptogramin"]<-"MLS"
data_contig$contig_taxon.x[is.na(data_contig$contig_taxon.x)]<-"Unclassified"
data_contig<-data_contig[grep("Actinobacteria",data_contig$contig_phyla),]
data_stat<-data_contig%>%
group_by(type,contig_phyla)%>%
count(type)%>%
mutate(type_ACC_percent=n/sum(n))
data_phyl_stat<-data_contig%>%
count(contig_phyla)%>%
mutate(phyla_ACC_percent=n/248)
data_stat1<-data_contig%>%
select(contig_phyla,Sample,type,subtype,contig_taxon.x)
colnames(data_stat1)<-c('Phyla','Sample','ARG type ',"ARG subtype","ARC_taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long('Phyla','Sample','ARG type ',"ARG subtype","ARC_taxon")
data_sankey$node<-factor(data_sankey$node)
#我們算一下各節點的數量
reagg <- data_sankey%>%
dplyr::group_by(node)%>%
tally()
df2 <- merge(data_sankey,
reagg,
by.x = 'node',
by.y = 'node',
all.x = TRUE)
pl <- ggplot(df2, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
,label = paste0(node, " = ", n))
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size =5, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(31, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data_contig$contig_phyla[is.na(data_contig$contig_phyla)]<-"Unclassified"
data_contig$contig_phyla[data_contig$contig_phyla == "Bacteria"]<-"Unclassified"
data_contig$type[data_contig$type == "fosmidomycin"]<-"Others"
data_contig$type[data_contig$type == "kasugamycin"]<-"Others"
data_contig$type[data_contig$type == "sulfonamide"]<-"Others"
data_contig$type[data_contig$type == "macrolide-lincosamide-streptogramin"]<-"Others"
data_contig$type[data_contig$type == "quinolone"]<-"Others"
data_contig$type[data_contig$type == "fosfomycin"]<-"Others"
data_contig$type[data_contig$type == "unclassified"]<-"Others"
data_contig$type<-str_to_title(data_contig$type)
data_contig$type[data_contig$type == "Beta-Lactam"]<-"Beta-lactam"
data_contig$type[data_contig$type == "Macrolide-Lincosamide-Streptogramin"]<-"MLS"
data_contig$contig_taxon.x[is.na(data_contig$contig_taxon.x)]<-"Unclassified"
#data_contig<-data_contig[grep("Actinobacteria",data_contig$contig_phyla),]
data_stat<-data_contig%>%
group_by(type,contig_phyla)%>%
count(type)%>%
mutate(type_ACC_percent=n/sum(n))
data_phyl_stat<-data_contig%>%
count(contig_phyla)%>%
mutate(phyla_ACC_percent=n/248)
data_stat1<-data_contig%>%
select(contig_phyla,Sample,type,subtype,contig_taxon.x)
colnames(data_stat1)<-c('Phyla','Sample','ARG type ',"ARG subtype","ARC_taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long('Phyla','Sample','ARG type ',"ARG subtype","ARC_taxon")
data_sankey$node<-factor(data_sankey$node)
#我們算一下各節點的數量
reagg <- data_sankey%>%
dplyr::group_by(node)%>%
tally()
df2 <- merge(data_sankey,
reagg,
by.x = 'node',
by.y = 'node',
all.x = TRUE)
pl <- ggplot(df2, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
,label = paste0(node, " = ", n))
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size =5, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(31, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(122, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
data_stat1<-data_contig%>%
select(type,subtype,contig_taxon.x)
colnames(data_stat1)<-c('ARG type ',"ARG subtype","ARC_taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long('ARG type ',"ARG subtype","ARC_taxon")
data_sankey$node<-factor(data_sankey$node)
#我們算一下各節點的數量
reagg <- data_sankey%>%
dplyr::group_by(node)%>%
tally()
df2 <- merge(data_sankey,
reagg,
by.x = 'node',
by.y = 'node',
all.x = TRUE)
pl <- ggplot(df2, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
,label = paste0(node, " = ", n))
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size =5, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(122, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
pl <- ggplot(df2, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
,label = paste0(node, " = ", n))
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size =3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(122, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
View(data_ARGsub)
View(data_taxa)
View(data_taxa)
#taxa名稱處理
data_taxa<-data_taxa[,-(9:11)]
View(data_taxa)
#taxa名稱處理
data_taxa<-data_taxa[,-(9:11)]
View(data_taxa)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
#taxa名稱處理
data_taxa<-data_taxa[,-(8:10)]
View(data_taxa)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
data_ARGsub<-data_ARGsub[apply(data_ARGsub, 1, function(x) !all(x==0)),]
#taxa名稱處理
data_taxa<-data_taxa[,-(8:10)]
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:8)]
data_taxa<-data_taxa[apply(data_taxa, 1, function(x) !all(x==0)),]
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
data_taxa<-arrange(data_taxa, desc(sum))
data_taxa<-data_taxa[1:100,]
data_taxa$sum<-NULL
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.9] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
corr_final.dataframe<-corr_final.dataframe[apply(corr_final.dataframe, 1, function(x) !all(x==0)),]
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
RColorBrewer::display.brewer.all()
RColorBrewer::display.brewer.pal(12,"Set3")
RColorBrewer::brewer.pal(12,"Set3")
library("openxlsx")
library("Hmisc")
library("tidyverse")
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
data_ARGsub<-data_ARGsub[data_ARGsub$subtype %in% core_ARG_list, ]
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
core_ARG_list<-c("aminoglycoside__aac(2')-I","bacitracin__bacA","beta-lactam__class A beta-lactamase","fosfomycin__fosX","fosmidomycin__rosB","macrolide-lincosamide-streptogramin__erm(39)","macrolide-lincosamide-streptogramin__macB","multidrug__acrB","multidrug__bpeF","multidrug__ceoB"
,"multidrug__emrE","multidrug__mdtB","multidrug__mdtC","multidrug__mdtF","multidrug__mexF","multidrug__mexW","multidrug__multidrug_ABC_transporter","multidrug__multidrug_transporter","quinolone__mfpA","rifamycin__ADP-ribosylating transferase_arr","rifamycin__rifampin monooxygenase","tetracycline__tetV","unclassified__transcriptional regulatory protein CpxR cpxR","vancomycin__vanA","vancomycin__vanR","vancomycin__vanS"
)
data_ARGsub<-data_ARGsub[data_ARGsub$subtype %in% core_ARG_list, ]
View(data_ARGsub)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/genus_rel_table.xlsx",sheet=1,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub[-(2:4)]
core_ARG_list<-c("aminoglycoside__aac(2')-I","bacitracin__bacA","beta-lactam__class A beta-lactamase","fosfomycin__fosX","fosmidomycin__rosB","macrolide-lincosamide-streptogramin__erm(39)","macrolide-lincosamide-streptogramin__macB","multidrug__acrB","multidrug__bpeF","multidrug__ceoB"
,"multidrug__emrE","multidrug__mdtB","multidrug__mdtC","multidrug__mdtF","multidrug__mexF","multidrug__mexW","multidrug__multidrug_ABC_transporter","multidrug__multidrug_transporter","quinolone__mfpA","rifamycin__ADP-ribosylating transferase_arr","rifamycin__rifampin monooxygenase","tetracycline__tetV","unclassified__transcriptional regulatory protein CpxR cpxR","vancomycin__vanA","vancomycin__vanR","vancomycin__vanS"
)
data_ARGsub<-data_ARGsub[data_ARGsub$`ARGs abundance normalization aganist 16S` %in% core_ARG_list, ]
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
data_ARGsub<-data_ARGsub[apply(data_ARGsub, 1, function(x) !all(x==0)),]
View(data_ARGsub)
#taxa名稱處理
data_taxa<-data_taxa[,-(8:10)]
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa<-data_taxa[,-(1:8)]
data_taxa<-data_taxa[apply(data_taxa, 1, function(x) !all(x==0)),]
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
data_taxa<-arrange(data_taxa, desc(sum))
data_taxa<-data_taxa[1:100,]
data_taxa$sum<-NULL
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(data)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.05] <- -1
corr$P[corr$P < 0.05 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.8] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
corr_final.dataframe<-corr_final.dataframe[apply(corr_final.dataframe, 1, function(x) !all(x==0)),]
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
library(openxlsx)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(ggsankey)
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data_contig$contig_phyla[is.na(data_contig$contig_phyla)]<-"Unclassified"
data_contig$contig_phyla[data_contig$contig_phyla == "Bacteria"]<-"Unclassified"
library(openxlsx)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(ggsankey)
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data_contig$contig_phyla[is.na(data_contig$contig_phyla)]<-"Unclassified"
data_contig$contig_phyla[data_contig$contig_phyla == "Bacteria"]<-"Unclassified"
data_contig$type[data_contig$type == "fosmidomycin"]<-"Others"
data_contig$type[data_contig$type == "kasugamycin"]<-"Others"
data_contig$type[data_contig$type == "sulfonamide"]<-"Others"
data_contig$type[data_contig$type == "macrolide-lincosamide-streptogramin"]<-"Others"
data_contig$type[data_contig$type == "quinolone"]<-"Others"
data_contig$type[data_contig$type == "fosfomycin"]<-"Others"
data_contig$type[data_contig$type == "unclassified"]<-"Others"
data_contig$type<-str_to_title(data_contig$type)
data_contig$type[data_contig$type == "Beta-Lactam"]<-"Beta-lactam"
data_contig$type[data_contig$type == "Macrolide-Lincosamide-Streptogramin"]<-"MLS"
data_contig$contig_taxon.x[is.na(data_contig$contig_taxon.x)]<-"Unclassified"
data_stat1<-data_contig%>%
select(Sample,contig_phyla,type)
colnames(data_stat1)<-c('Sample','Phyla','ARG type ')
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long('Sample','Phyla','ARG type ')
data_sankey$node<-factor(data_sankey$node)
#我們算一下各節點的數量
reagg <- data_sankey%>%
dplyr::group_by(node)%>%
tally()
df2 <- merge(data_sankey,
reagg,
by.x = 'node',
by.y = 'node',
all.x = TRUE)
pl <- ggplot(df2, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
,label = paste0(node, " = ", n))
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size =5, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(31, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
pl <- pl +geom_sankey_text(size =4, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(31, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
pl <- ggplot(df2, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
,label = paste0(node, " = ", n))
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size =4, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(31, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(5, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(20, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
pl <- pl +geom_sankey_text(size =3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(20, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
pl <- ggplot(df2, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
,label = paste0(node, " = ", n))
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size =3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.08))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(20, "Sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
