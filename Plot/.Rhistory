display.brewer.pal(mame="Set3")
display.brewer.pal(name="Set3")
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#BC80BD","#CCEBC5","#FFED6F")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_brewer(palette = color)+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
scale_color_brewer
scale_color_brewer()
scale_color_brewer()
?scale_color_brewer()
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_brewer(values=color)+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_brewer(values="color")+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_brewer(values="#BC80BD","#CCEBC5","#FFED6F")+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_brewer(values="#BC80BD")+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
color<-c(明德="#BC80BD",成功="#CCEBC5",丸山="#FFED6F")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_brewer(values=color)+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
color<-c(明德="#BC80BD",成功="#CCEBC5",丸山="#FFED6F")
color<-c("明德"="#BC80BD","成功"="#CCEBC5","丸山"="#FFED6F")
colora<-c("明德"="#BC80BD","成功"="#CCEBC5","丸山"="#FFED6F")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_manual(values=color)+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
colora<-c("#BC80BD","#CCEBC5","#FFED6F")
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
colora<-c("#FB8072","#80B1D3" ,"#FDB462")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_manual(values=color)+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
colora<-c("#FB8072","#80B1D3","#FDB462")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_manual(values=colora)+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
ggplot(points, aes(x=Dim1, y=Dim2,colour=plant))+
theme_bw()+
geom_point(size=4)+geom_text(aes(label=sample_ID),size=3,color="black",)+scale_color_manual(values=color)+#geom_hline(yintercept=0)+ geom_vline(xintercept=0)
theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="bray_curtis PCoA")
#if you use the Rcolor brewer,你需要利用scale_color_brewer(pal)
?scale_color_brewer()
library("openxlsx")
library("Hmisc")
library("tidyverse")
data<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=T,sep.names=" ")
View(data)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=T,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=3,rowNames=T,sep.names=" ")
View(data_taxa)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=3,rowNames=F,sep.names=" ")
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="_")
View(data_ARGsub)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=3,rowNames=F,sep.names=" ")
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
View(data_ARGsub)
colnames(data_ARGsub)<-data_ARGsub$subtype
View(data_ARGsub)
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
View(argclass)
View(data_ARGsub)
data_ARGsub$type<-NULL
View(data)
View(data_ARGsub)
View(data_taxa)
View(data_taxa)
rownames(data_taxa)<-data_taxa$Genus
View(data_ARGsub)
View(data_taxa)
#ARGdata名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
View(data_ARGsub)
View(data_taxa)
data_taxa$n<-NULL
View(data_taxa)
data_ARGsub$subtype<-NULL
data_taxa$Genus<-NULL
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data<-merge(data_taxa,data_ARGsub,all=T)
View(data)
data<-
data<-merge(data_taxa,data_ARGsub)
View(data)
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
View(data)
rownames(data)<-data$sample
data$sample<-NULL
View(data)
data<-as.data.frame(t(data))
View(data)
#計算出現次數
data_clean<-data
data_clean[data_clean!=0]<-1
data_clean$times_discover_in_all<-apply(data_clean,1,sum)
data$times_discover<-data_clean$times_discover_in_all
#這邊可以篩選出現超過幾次的data
times_over8<-filter(data,times_discover>=8)
View(times_over8)
#這邊可以篩選出現超過幾次的data
times_over8<-filter(data,times_discover>=9)
#這邊可以篩選出現超過幾次的data
times_over8<-filter(data,times_discover>=8)
times_over8$times_discover<-NULL
times_over8<-as.data.frame(t(times_over8))
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(times_over8)
corr<-rcorr(data.matrix,type= 'spearman')
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.8] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
?rcorr
#
node<-read.xlsx("C:/Users/USER/Desktop/node.xlsx",sheet=1,rowNames=F,sep.names=" ")
View(data.matrix)
View(node)
#
node<-read.xlsx("C:/Users/USER/Desktop/node.xlsx",sheet=1,rowNames=F,colnames=T,sep.names=" ")
#
node<-read.xlsx("C:/Users/USER/Desktop/node.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
View(node)
View(argclass)
argclass$ARG<-rep("ARG",189)
View(argclass)
argclass$ARG<-rep("ARGs",189)
View(argclass)
colnames(argclass)[2]<-"id"
View(argclass)
node<-merge(node,argclass,all.x = T)
View(node)
#
node<-read.xlsx("C:/Users/USER/Desktop/node.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
node<-merge(node,argclass,all.x = T)
write.xlsx("C:/Users/USER/Desktop/node_ad.xlsx")
write.xlsx(node,"C:/Users/USER/Desktop/node_ad.xlsx")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=4,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
argclass<-data_ARGsub[,1:2]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
View(data_taxa)
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Family,into=c("n","Family"),sep = "__")
rownames(data_taxa)<-data_taxa$Family
data_taxa$n<-NULL
data_taxa$Family<-NULL
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
#merge two df
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
data<-as.data.frame(t(data))
#計算出現次數
data_clean<-data
data_clean[data_clean!=0]<-1
data_clean$times_discover_in_all<-apply(data_clean,1,sum)
data$times_discover<-data_clean$times_discover_in_all
#這邊可以篩選出現超過幾次的data
times_over8<-filter(data,times_discover>=8)
times_over8$times_discover<-NULL
times_over8<-as.data.frame(t(times_over8))
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(times_over8)
corr<-rcorr(data.matrix,type= 'spearman')
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.8] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
View(times_over8)
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(data)
View(matrix_corr_P_adj)
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rolnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
View(matrix_corr_P_adj)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=4,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
argclass<-data_ARGsub[,1:2]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Family,into=c("n","Family"),sep = "__")
rownames(data_taxa)<-data_taxa$Family
data_taxa$n<-NULL
data_taxa$Family<-NULL
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
#merge two df
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
rownames(data)<-data$sample
data$sample<-NULL
data<-as.data.frame(t(data))
#計算出現次數
data_clean<-data
data_clean[data_clean!=0]<-1
data_clean$times_discover_in_all<-apply(data_clean,1,sum)
data$times_discover<-data_clean$times_discover_in_all
#這邊可以篩選出現超過幾次的data
times_over8<-filter(data,times_discover>=8)
times_over8$times_discover<-NULL
times_over8<-as.data.frame(t(times_over8))
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(times_over8)
corr<-rcorr(data.matrix,type= 'spearman')
View(corr)
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
View(matrix_corr_P_adj)
View(argclass)
View(corr)
View(matrix_corr_P_adj)
View(corr)
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
View(corr_significiant)
#taxa top 20 abundance
data_taxa<-data_taxa%>%
mutate(sum=apply(data_taxa,1,sum))%>%
arrange(sum)
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
View(data_taxa)
data_taxa<-as.data.frame(t(data_taxa))
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
str(data_taxa)
data_taxa<-as.numeric(data_taxa)
data_taxa<-asNumericMatrix(data_taxa)
View(data_taxa)
str(data_taxa)
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=4,rowNames=F,sep.names=" ")
str(data_taxa)
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=4,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
argclass<-data_ARGsub[,1:2]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Family,into=c("n","Family"),sep = "__")
rownames(data_taxa)<-data_taxa$Family
data_taxa$n<-NULL
data_taxa$Family<-NULL
str(data_taxa)
data_taxa<-as.data.frame(t(data_taxa))
str(data_taxa)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=4,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
argclass<-data_ARGsub[,1:2]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Family,into=c("n","Family"),sep = "__")
rownames(data_taxa)<-data_taxa$Family
data_taxa$n<-NULL
data_taxa$Family<-NULL
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
View(data_taxa)
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=4,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
argclass<-data_ARGsub[,1:2]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Family,into=c("n","Family"),sep = "__")
rownames(data_taxa)<-data_taxa$Family
data_taxa$n<-NULL
data_taxa$Family<-NULL
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
?arrange
data_taxa<-arrange(data_taxa, desc(sum))
View(data_taxa)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=3,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
argclass<-data_ARGsub[,1:2]
#taxa名稱處理
data_taxa<-data_taxa%>%
separate(Genus,into=c("n","Genus"),sep = "__")
rownames(data_taxa)<-data_taxa$Genus
data_taxa$n<-NULL
data_taxa$Genus<-NULL
#taxa top 20 abundance
data_taxa$sum<-apply(data_taxa,1,sum)
data_taxa<-arrange(data_taxa, desc(sum))
View(data_taxa)
data_taxa<-data_taxa[,1:20]
data_taxa<-data_taxa[1:20,]
View(data_taxa)
data_taxa$sum<-NULL
#merge two df
data_ARGsub<-as.data.frame(t(data_ARGsub))
data_taxa<-as.data.frame(t(data_taxa))
data_ARGsub$sample<-rownames(data_ARGsub)
data_taxa$sample<-rownames(data_taxa)
data<-merge(data_taxa,data_ARGsub)
View(data)
View(data_ARGsub)
rownames(data)<-data$sample
View(argclass)
View(data)
data$sample<-NULL
View(data)
View(data_taxa)
data<-as.data.frame(t(data))
#計算出現次數
data_clean<-data
data_clean[data_clean!=0]<-1
data_clean$times_discover_in_all<-apply(data_clean,1,sum)
data$times_discover<-data_clean$times_discover_in_all
#這邊可以篩選出現超過幾次的data
times_over8<-filter(data,times_discover>=8)
View(times_over8)
times_over8$times_discover<-NULL
times_over8<-as.data.frame(t(times_over8))
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(times_over8)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.8] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
View(argclass)
View(argclass)
View(argclass)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=3,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
data_ARGsub$type<-NULL
data_ARGsub$subtype<-NULL
argclass<-data_ARGsub[,1:2]
View(argclass)
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=1,rowNames=F,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/ARG taxon correlation.xlsx",sheet=3,rowNames=F,sep.names=" ")
#ARGdata名稱處理
data_ARGsub<-data_ARGsub%>%
separate(`ARGs abundance normalization aganist 16S`,into=c("type","subtype"),sep="__")
rownames(data_ARGsub)<-data_ARGsub$subtype
argclass<-data_ARGsub[,1:2]
View(argclass)
View(argclass)
