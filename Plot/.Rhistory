, axis.ticks = element_blank()
, panel.grid = element_blank())
cols <- hcl.colors(30, "Set3")
pl <- pl + scale_fill_manual(values=cols)
pl
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
colnames(data_stat1)<-c('Phyla','Sample','ARG type ',"ARG subtype","ARC_Taxon")
data_stat<-as.data.frame(data_stat1)
data_sankey<- data_stat1%>%
make_long('Sample','ARG type ',"ARG subtype","contig_taxon")
data_sankey$node<-fct_rev(factor(data_sankey$node))
pl <- ggplot(data_sankey, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill =node
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = NA
,show.legend = F)
pl <- pl +geom_sankey_text(size = 3, color = "black", fill = NA, hjust = 0,
position = position_nudge(x = 0.1))
pl <- pl +  theme_alluvial()
pl <- pl + theme(legend.position = "none")
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(30, "sunset")
pl <- pl + scale_fill_manual(values=cols)
pl
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
#pl <- pl +  theme(axis.title = element_blank()
# , axis.text.y = element_blank()
#, axis.ticks = element_blank()
# , panel.grid = element_blank())
cols <- hcl.colors(31, "Plasma")
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`,color=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_brewer(palette = "Set3")+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
cols <- hcl.colors(12, "Sunset")
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`),stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_manual(values = cols)+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/ARG_type_abundance_stackbarplot.R", echo=TRUE)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=`ARGs type`),color="black",stat="identity",alpha=0.9)+
labs(x=NULL,y=NULL)+scale_fill_manual(values = cols)+scale_color_brewer(palette = "Set3")+theme(axis.title = element_text(size=13),axis.text = element_text(size=13),legend.title= element_text(size=12),legend.text = element_text(size=12))+theme_bw()+xlab("Sample")+ylab("ARGs abundance normalization against 16S")+theme_bw()
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
reagg <- data_sankey%>%
dplyr::group_by(node)%>%  # Here we are grouping the data by node and then we are taking the frequency of it
tally()
df2 <- merge(data_sankey,
reagg,
by.x = 'node',
by.y = 'node',
all.x = TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/contig_statis_sankeyplot.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/ARG subtype heatmeap_temp.R", echo=TRUE)
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=colorRampPalette(c("#FCFBFD", "#BCBDDC", "#54278F"))(50))
cols <- hcl.colors(50, "sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(100, "sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Purples")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- rev(hcl.colors(300, "Purples"))
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
source("~/GitHub/R_scripts/Plot/ARG subtype heatmeap_temp.R", echo=TRUE)
cols <- rev(hcl.colors(300, "Viridis"))
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Viridis")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Viridis")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "ag_Sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Sunset")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "BuPu")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Inferno")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Blue-Yellow")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Blue-Yellow3")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Temps")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Plasma")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Purp")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "Purple")
cols <- hcl.colors(300, "Purples")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
cols <- hcl.colors(300, "TealRose")
pheatmap(data_log,cluster_rows = F,cluster_cols = F,color=cols)
source("~/GitHub/R_scripts/Plot/PCOA_adonistest.R", echo=TRUE)
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
source("~/GitHub/R_scripts/Plot/PCOA_adonistest.R", echo=TRUE)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#這個不一定要，下面這個只是把全部都是0的rows清掉
dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
dbpata <-as.data.frame(t(dbpata))
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata.dist <- vegdist(dbpata, method="bray", binary=F)
#檢驗Adonis是不是因為betadispersion造成的
dispersion <- betadisper(dbpata.dist, group=groupata$location)
permutest(dispersion)
dbpata_adonis <- paste0(" adonis R2: ",round(dune.div$R2,2), "; P-value: ", dune.div$`Pr(>F)`)
View(x)
dbpata_adonis <- paste0(" adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#開始畫圖，先選色
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha-0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_hline(yintercept=0)+ geom_vline(xintercept=0)+theme(panel.grid=element_blank())+
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
rownames(dbpata)
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#準備畫圖
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#3dpoca
colors=color[as.numeric(points$location)]
colnames(points)[1]<-paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep="")
colnames(points)[2]<-paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep="")
colnames(points)[3]<-paste("PCoA 3 (", format(100 * eig[3] / sum(eig), digits=4), "%)", sep="")
scatterplot3d(points[,1:3],color=colors,main="Bray_curtis PCoA",pch=16,cex.symbols = 1.3)
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
View(points)
source("~/GitHub/R_scripts/Plot/PCOA_adonistest.R", echo=TRUE)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownams(dbpata)<-dbpata$Species
rownams(dbpata)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
rownam(dbpata)
library(vegan)
library(ecodist)
library(ggplot2)
library(openxlsx)
library(RColorBrewer)
library(scatterplot3d)
library(pairwiseAdonis)
library(tidyverse)
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownames(dbpata)<-dbpata$Species
library(vegan)
library(ecodist)
library(ggplot2)
library(tidyverse)
library(openxlsx)
library(RColorBrewer)
library(scatterplot3d)
library(pairwiseAdonis)
dbpata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/rel abundance table/species_rel_table.xlsx",sheet=1,rowNames=F,colNames=T,sep.names=" ")
groupata<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/TAXA/groupdata.xlsx",sheet=1,rowNames=T,colNames=T,sep.names=" ")
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownames(dbpata)<-dbpata$Species
dbpata<-dbpata[,-(1:7)]
dbpata <-as.data.frame(t(dbpata))
#Hellinger不一定需要，ARG不用
dbpata <- decostand(dbpata, method = 'hellinger')
family_bray<-vegdist(dbpata, method="bray")
length_1<-length(rownames(dbpata))
pcoa = cmdscale(family_bray, k=(length_1-1), eig=TRUE)
points=scores(pcoa)
eig = pcoa$eig
eig
points<-as.data.frame(points)
points <-cbind(points, groupata[match(rownames(points), rownames(groupata)), ])
#用Adonis 來檢定組間差異是不是顯著的
x<-adonis2(dbpata~location,data = groupata)
x
dbpata_adonis <- paste0("adonis R2: ",round(x$R2,2), "; P-value: ", x$`Pr(>F)`)
#檢驗adnois，我們需要檢驗一下這個adonis的結果是不是因為分組數據的離散程度不同造成的
dbpata.dis <- vegdist(dbpata, method="bray", binary=F)
dispersion <- betadisper(dbpata.dis, group=groupata$location)
permutest(dispersion,permutations = 99999)
#dune.pairwise.adonis <- pairwise.adonis(x=dbpata, factors=groupata$location, sim.function = "vegdist",sim.method = "bray",reduce = NULL,perm = 999)
#準備畫圖
points$location<-factor(points$location,levels=c('Raw', 'Finished', 'Upstream','Midstream','Downstream'))
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#FB8072","#BEBADA","#80B1D3","#FDB462","#B3DE69")
#if you use the Rcolor brewer,你需要利用scale_color_brewer(palette="paletee_name")
#自選顏色的話用Scale_color_manual(values=color_vector)
#2dpcoa
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legen
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
ggplot(points, aes(x=Dim1, y=Dim2,colour=location))+
theme_bw()+
geom_point(size=3,alpha=0.7)+#geom_text(aes(label=sample_ID),size=3,color="black",)+
scale_color_manual(values = color)+geom_vline(xintercept = 0, color = 'gray', linetype = 2) +
geom_hline(yintercept = 0, color = 'gray', linetype = 2,) +
labs(x=paste("PCoA 1 (", format(100 * eig[1] / sum(eig), digits=4), "%)", sep=""),
y=paste("PCoA 2 (", format(100 * eig[2] / sum(eig), digits=4), "%)", sep=""),
title="Bray_curtis PCoA")+theme(axis.title = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual("Location",values =color)
source("~/GitHub/R_scripts/Plot/Procrustes Analysis.R", echo=TRUE)
arg_bray
arg_bray<-as.data.frame(arg_bray)
arg_bray<-as.matrix(arg_bray)
View(arg_bray)
taxa_bray<-as.matrix(taxa_bray)
source("~/GitHub/R_scripts/Plot/3d pcoa.R", echo=TRUE)
#因為species太多了，我們把小於0.01%的species清掉
#dbpata[dbpata<0.0001]<-0
#dbpata<-dbpata[apply(dbpata, 1, function(x) !all(x==0)),]
#dbpata1<-as.data.frame(apply(dbpata,2,function(x) x/sum(x)))
#dbpata<-dbpata1
#以上不一定需要，看你分析的DATA
rownames(dbpata)<-dbpata$Species
library("openxlsx")
library("Hmisc")
library("tidyverse")
data_ARGsub<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=1,rowNames=T,sep.names=" ")
data_taxa<-read.xlsx("C:/Users/USER/Desktop/MGEblastoutform.xlsx",sheet=1,rowNames=T,sep.names=" ")
#計算出現次數
data_clean<-data_ARGsub
data_clean[data_clean!=0]<-1
data_clean$times_discover_in_all<-apply(data_clean,1,sum)
data_ARGsub$times_discover<-data_clean$times_discover_in_all
#這邊可以篩選出現超過幾次的data
times_over8<-filter(data_ARGsub,times_discover>=8)
times_over8$times_discover<-NULL
times_over8<-as.data.frame(t(times_over8))
#因為rcorr()他的input要是matrix
data.matrix<-as.matrix(times_over8)
corr<-rcorr(data.matrix,type= 'spearman')
#P值修正
corr_P_adj <- p.adjust(corr$P, method = 'BH')
matrix_corr_P_adj <- matrix(corr_P_adj,nrow=(length(corr$P)**0.5))
colnames(matrix_corr_P_adj)<-colnames(corr$P)
rownames(matrix_corr_P_adj) <- rownames(corr$P)
#corr<-as.list(corrx)
corr$P[corr$P >= 0.01] <- -1
corr$P[corr$P < 0.01 & corr$P >= 0] <- 1
corr$P[corr$P == -1] <- 0
#我們先輸出一次有顯著相關但相關性未必足夠的矩陣
corr_significiant<-corr$r * corr$P
#因為write.xlsx之output要是dataframe
corr_significiant.dataframe<-as.data.frame(corr_significiant)
write.xlsx(corr_significiant.dataframe, 'C:/Users/USER/Desktop/小型testp0.05.xlsx',rowNames=T,colNames=T,keepNA=T)
#接著將計算出來之相關性大於0.8且p小於0.05者留下
corr$r[corr$r < 0.8] <- 0
corr_final <-corr$r * corr$P
#因為計算相關性只會有半邊的矩陣(上面是多餘的)所以我們只會需要下三角矩陣，且不需要對角矩陣(都為1)
corr_final[!lower.tri(corr_final)] <- 0
#有些數據因為是0所以算不出相關性(na)，我們把她去除
corr_final[is.na(corr_final)]<-0
corr_final.dataframe<-as.data.frame(corr_final)
write.xlsx(corr_final.dataframe, 'C:/Users/USER/Desktop/小型test.xlsx',rowNames=T,colNames=T)
source("~/GitHub/R_scripts/Plot/ARG abundance barplot.R", echo=TRUE)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.8,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.7,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.7,width = 0.6)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,linewidth=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.7,width = 0.6)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
library(openxlsx)
library(tidyverse)
library(RColorBrewer)
library("car")
library("FSA")
library("mdthemes")
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARG/ARGoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
data<-as.data.frame(t(data))
data$sum<-apply(data,1,sum)
data$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
data$location<-factor(data$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
varaible_group_mean<-data%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum))
#進行pairwise統計
varaible_and_group<-sum~location#想測試的變數跟組別
{#我們必須先檢查數據是不是常態分布及變異數的同質性，才能決定我們要用的檢定方法。
#檢查數據是否是常態分布的,利用shapiro.test來檢驗數據是不是常態的，如果p>0.05那麼數據就是常態的
Data.levels<-split(data, data$location)
for(i in seq(length(Data.levels))) {
group.n<-length(Data.levels[[i]]$location)
group.name <-Data.levels[[i]]$location[1]
cat(paste("Group: ", group.name, sep=''), sep="", append=TRUE)
if (group.n < 50) {
shapiro.result<- shapiro.test(Data.levels[[i]]$sum)
cat(", Shapiro-Wilk normality test W = ", shapiro.result$statistic, " p-value = ", shapiro.result$p.value, "\n" , sep="")
} else {
ks.result<-ks.test(Data.levels[[i]]$sum, pnorm, mean(Data.levels[[i]]$sum), sd(Data.levels[[i]]$sum))
cat(", Kolmogorov-Smirnov normality test D = ", ks.result$statistic, " p-value = ", ks.result$p.value, "\n" , sep="", append=TRUE)
}
}
#檢查數據變異數的同質性，，如果levenes test 的結果p>0.05，那我們可以認為以這幾個組別間的變異數沒有明顯差異，他們是同質的P
homo<-leveneTest(varaible_and_group,data = data)
if (homo$`Pr(>F)`[1]>0.05){
print("data is homo")
}else{print ("data is nonhomo")}
#如果不同質可以用ftest來看是誰不同質
#res.ftest <- var.test(Data.levels[[1]]$bacitracin,Data.levels[[4]]$bacitracin,data = data)
#res.ftest
}
#我們必須手動去看是否是常態及同質的，如果兩者皆符合，那我們可以使用t-test
pairwise.t.test(data$sum,data$location,p.adjust.method = "BH")
?pairwise.t.test
#如果兩者中有一不符合，那我們得使用wilcoxon rank sum test
pairwise.wilcox.test(data$bacitracin,data$location,p.adjust.method = "BH")
wilcox.test(Data.levels[[4]]$sum,Data.levels[[1]]$sum,exact = F)
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3",alpha=0.7,width = 0.8)+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.1,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
source("~/GitHub/R_scripts/Plot/core_ARG ARG correlation.R", echo=TRUE)
data_core_percentenge<-(data_core_sum/data_sum)
data_other<-1-(data_core_percentenge)
plotdata<-as.data.frame(t(rbind(`Core ARGs`=data_core_percentenge,`Other ARGs`=data_other)))
plotdata$sample<-rownames(plotdata)
plotdata<-gather(plotdata,type,amount,`Core ARGs`,`Other ARGs`)
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=type,color=type),alpha=0.8,stat="identity")+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),legend.title= element_text(size=12.5),legend.text = element_text(size=12.5))
color<-c( "#BEBADA","#80B1D3")
ggplot(plotdata)+
geom_bar(aes(x=sample,y=amount,fill=type,color=type),alpha=0.8,stat="identity")+scale_fill_manual(values = color)+scale_color_manual(values = color)+theme_bw()+labs(x="Sample",y="Relative abundance")+theme(axis.title = element_text(size=12.5),legend.title= element_text(size=12.5),legend.text = element_text(size=12.5))
source("~/GitHub/R_scripts/Plot/drinking water ARG type box plot.R", echo=TRUE)
plot<-dbpata1%>%
mutate(type=fct_reorder(`ARGs Type`,desc(value)))%>%
ggplot(aes(x=type,y=value))+geom_boxplot(fill="#BEBADA",alpha=0.7)+
theme_bw()+geom_point(size=1)+labs(x="ARGs Type",y="ARGs abundance normalization against 16S")+theme(axis.title = element_text(size=12.5),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))
plot
