ggally_cor(data = data,
mapping = mapping)
}
}
RColorBrewer::brewer.pal(12,"Set3")
color<-c("#FB8072","#80B1D3","#BEBADA" )
#ggpairs
ggpairs(data, lower = list(continuous = wrap(lower_fn, method="lm")),
diag = list(continuous=wrap(diag_fn))
,ggplot2::aes(color=group))+
theme_bw()+
scale_fill_manual(values=color)+
scale_color_manual(values=color)+
theme(strip.text.x = element_text ( size = 12),
strip.text.y = element_text ( size = 12),
strip.text = element_text(face = "italic"))
#multi group plot--------------------------------------------------
data$group <-c("Raw","Raw","Raw","Finished","Finished","Finished","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS")
data<-as.data.frame(data)
data$group<-factor(data$group,levels = c("Raw","Finished","DWDS"))
#plot function
{
lower_fn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point(aes(color=group),alpha=0.7,size=2) +
geom_smooth(method =lm,alpha=0.3,size=0.7,aes(color=group),fill="gray")+
scale_color_manual(values=color)
p
}
diag_fn <- function(data, mapping,group,...) {
ggplot(data = data,
mapping = mapping) +
geom_density(...,alpha=0.7,aes(fill=group))
}
upper_fn<- function(data, mapping,...) {
ggally_cor(data = data,
mapping = mapping)
}
}
RColorBrewer::brewer.pal(12,"Set3")
color<-c("#FB8072","#80B1D3","#BEBADA" )
ggpairs(data, lower = list(continuous = wrap(lower_fn, method="lm")),
diag = list(continuous=wrap(diag_fn))
,ggplot2::aes(color=group))+
theme_bw()+
scale_fill_manual(values=color)+
scale_color_manual(values=color)+
theme(strip.text.x = element_text ( size = 12),
strip.text.y = element_text ( size = 12),
strip.text = element_text(face = "italic"))
x<-ggpairs(data, lower = list(continuous = wrap(lower_fn, method="lm")),
diag = list(continuous=wrap(diag_fn)),
upper = list(continuous=wrap(upper_fn)))+
theme_bw()+
theme(strip.text.x = element_text ( size = 12),
strip.text.y = element_text ( size = 12),
strip.text = element_text(face = "italic"))
x
#ggsave("plot.pdf",x, width = 20, height = 13)
#two group plot-------------------------------------------------------------------------
data$group <-c("Raw","Raw","Raw","DW","DW","DW","DW","DW","DW","DW","DW","DW","DW","DW","DW")
data<-as.data.frame(data)
data$group<-factor(data$group,levels = c("Raw","DW"))
#plot function
{
lower_fn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point(aes(color=group),alpha=0.7,size=2) +
geom_smooth(method =lm,alpha=0.3,size=0.7,aes(color=group),fill="gray")+
scale_color_manual(values=color)
p
}
diag_fn <- function(data, mapping,group,...) {
ggplot(data = data,
mapping = mapping) +
geom_density(...,alpha=0.7,aes(fill=group))
}
upper_fn<- function(data, mapping,...) {
ggally_cor(data = data,
mapping = mapping)
}
}
RColorBrewer::brewer.pal(12,"Set3")
color<-c("#80B1D3","#BEBADA" )
#ggpairs
ggpairs(data, lower = list(continuous = wrap(lower_fn, method="lm")),
diag = list(continuous=wrap(diag_fn))
,ggplot2::aes(color=group))+
theme_bw()+
scale_fill_manual(values=color)+
scale_color_manual(values=color)+
theme(strip.text.x = element_text ( size = 12),
strip.text.y = element_text ( size = 12),
strip.text = element_text(face = "italic"))
library("openxlsx")
library("gggenes")
library("tidyverse")
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/MGE/ARC MGE.xlsx",sheet=4)
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Sunset") +
theme_genes()
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "sunset") +
theme_genes()
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()+theme_bw()
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
data<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/MGE/ARC MGE.xlsx",sheet=5)
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow() +
geom_gene_label()+
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow(alpha=0.7) +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
color<-hcl.colors(7,"Sunset")
ggplot(data, aes(xmin = start, xmax = end, y = molecule, fill = Subtype,label=gene,forward = direction)) +
geom_gene_arrow(alpha=0.7) +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_manual(values=color) +
theme_genes()
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
library("openxlsx")
library("gggenes")
library("tidyverse")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=1)
View(data2)
data<-merge(data1,data2,all.x = T,by="orf_qseqid")
View(data)
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=2)
data<-merge(data,data2,all.x = T,by="contig")
View(data)
View(data)
View(data)
write.xlsx(data,"ARC_phyla_整理_adjcov.xlsx")
getwd()
library("openxlsx")
library("gggenes")
library("tidyverse")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/Plasflow/ARC_plasflow out.xlsx",sheet=1)
library("openxlsx")
library("gggenes")
library("tidyverse")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/Plasflow/ARC_plasflow out.xlsx",sheet=1)
View(data1)
library("openxlsx")
library("gggenes")
library("tidyverse")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/Plasflow/",sheet=1)
library("openxlsx")
library("gggenes")
library("tidyverse")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=2)
data<-merge(data1,data2,all.x = T,by="orf_qseqid")
library("openxlsx")
library("gggenes")
library("tidyverse")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=2)
data<-merge(data1,data2,all.x = T,by="orf_qseqid")
library("openxlsx")
library("gggenes")
library("tidyverse")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=1)
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=1)
data<-merge(data1,data2,all.x = T,by="orf_qseqid")
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=2)
data<-merge(data,data2,all.x = T,by="contig")
write.xlsx(data,"ARC_phyla_整理_adjcov.xlsx")
data3<-data1<-read.xlsx("C:/Users/USER/Desktop/ARC_phyla_整理_adjcov.xlsx")
data3<-read.xlsx("C:/Users/USER/Desktop/ARC_phyla_整理_adjcov.xlsx")
View(data3)
data3<-read.xlsx("C:/Users/USER/Desktop/ARC_phyla_整理_adjcov.xlsx")
data1<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理.xlsx",sheet=1)
data2<-read.xlsx("C:/Users/USER/Desktop/adj_coverage.xlsx",sheet=2)
data<-merge(data1,data2,all.x = T,by="orf_qseqid")
#write.xlsx(data,"ARC_phyla_整理_adjcov.xlsx")
data3<-read.xlsx("C:/Users/USER/Desktop/ARC_phyla_整理_adjcov.xlsx")
View(data3)
data4<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/Plasflow/ARC_analysis_phyla_plasflow.xlsx",sheet = 2)
View(data3)
data5<-merge(data3,data4,all.x=T,by="orf_qseqid")
View(data5)
write.xlsx(data5,"ARC_phyla_整理_adjcov_plasflow.xlsx")
library(openxlsx)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(ggsankey)
data_contig<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/newDATA/ARC_analysis/ARC_phyla_整理_adjcov.xlsx",sheet=1)
data_contig$contig_phyla[is.na(data_contig$contig_phyla)]<-"Unclassified"
data_contig$contig_phyla[data_contig$contig_phyla == "Bacteria"]<-"Unclassified"
#ARC host percentage(coverage)---------------------------
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_coverage,contig_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(contig_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(contig_coverage))%>%
mutate(contig_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
color1<-hcl.colors(7,"sunset")
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=`contig_coverage/sum_coverage`,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
#ARC host percentage(coverage)---------------------------
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_coverage,contig_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(contig_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(contig_coverage))%>%
mutate(contig_coverage/sum_coverage)
#ARC host percentage(coverage)---------------------------
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(contig_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(contig_coverage))%>%
mutate(contig_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage
data_stat<-data_contig%>%
View(data_contig)
View(data_contig)
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(contig_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(contig_coverage))%>%
mutate(contig_coverage/sum_coverage)
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(contig_adj_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(contig_adj_coverage))%>%
mutate(contig_adj_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
color1<-hcl.colors(7,"sunset")
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=`contig_coverage/sum_coverage`,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=contig_adj_coverage/sum_coverage`,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=`contig_adj_coverage/sum_coverage`,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
ggplot(data_stat)+geom_bar(aes(x=Sample,y=`contig_adj_coverage/sum_coverage`,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8
data_stat<-data_contig%>%
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(contig_adj_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(contig_adj_coverage))%>%
mutate(x=contig_adj_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
color1<-hcl.colors(7,"sunset")
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=x,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
View(data_stat)
View(data_stat)
View(data_contig)
data_stat<-data_contig%>%
group_by(Sample,type)%>%
summarise_at(vars(orf__adj_coverage), funs(sum))
##ARG orf type coverage---------------------------------------------------------------
data_stat<-data_contig%>%
group_by(Sample,type)%>%
summarise_at(vars(orf_adj_coverage), funs(sum))
#這個函式可以用來將Sample名稱轉成Location名稱
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
#data_stat$Sample[data_stat$Sample=="T1"]<-"Raw"
#data_stat$Sample[data_stat$Sample=="T2"]<-"Finished"
#data_stat$Sample[data_stat$Sample=="T3"]<-"Upstream"
#data_stat$Sample[data_stat$Sample=="T4"]<-"Midstream"
#data_stat$Sample[data_stat$Sample=="T5"]<-"Downstream"
data_stat$type<-str_to_sentence(data_stat$type)
data_stat$type[data_stat$type=="Macrolide-lincosamide-streptogramin"]<-"MLS"
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
color1<-c( "#FFFFB3" ,"#BC80BD" , "#FB8072" ,"#80B1D3" ,"#FDB462" ,"#B3DE69" ,"#FCCDE5" ,"#D9D9D9","#BEBADA" ,"#CCEBC5" ,"#FFED6F")
color<- hcl.colors(14, "Sunset")
ggplot(data_stat)+geom_bar(aes(x=Sample,y=orf_coverage,fill=type,color=type),stat="identity",alpha=0.7,width = 0.8)+
scale_fill_manual("Location",values = color)+scale_color_manual("Location",values = color)+theme_bw()+labs(x="ARG Type",y="ARC coverage (x/GB)")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
ggplot(data_stat)+geom_bar(aes(x=Sample,y=orf_adj_coverage,fill=type,color=type),stat="identity",alpha=0.7,width = 0.8)+
scale_fill_manual("Location",values = color)+scale_color_manual("Location",values = color)+theme_bw()+labs(x="ARG Type",y="ARC coverage (x/GB)")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
#ARC host percentage(coverage)---------------------------
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(contig_adj_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(contig_adj_coverage))%>%
mutate(x=contig_adj_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
color1<-hcl.colors(7,"sunset")
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=x,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
View(data_stat)
View(data_contig)
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(orf_adj_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(orf_adj_coverage))%>%
mutate(x=orf_adj_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
color1<-hcl.colors(7,"sunset")
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=x,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
##ARG orf type coverage---------------------------------------------------------------
data_stat<-data_contig%>%
group_by(Sample,type)%>%
summarise_at(vars(orf_adj_coverage), funs(sum))
#這個函式可以用來將Sample名稱轉成Location名稱
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
#data_stat$Sample[data_stat$Sample=="T1"]<-"Raw"
#data_stat$Sample[data_stat$Sample=="T2"]<-"Finished"
#data_stat$Sample[data_stat$Sample=="T3"]<-"Upstream"
#data_stat$Sample[data_stat$Sample=="T4"]<-"Midstream"
#data_stat$Sample[data_stat$Sample=="T5"]<-"Downstream"
data_stat$type<-str_to_sentence(data_stat$type)
data_stat$type[data_stat$type=="Macrolide-lincosamide-streptogramin"]<-"MLS"
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
color1<-c( "#FFFFB3" ,"#BC80BD" , "#FB8072" ,"#80B1D3" ,"#FDB462" ,"#B3DE69" ,"#FCCDE5" ,"#D9D9D9","#BEBADA" ,"#CCEBC5" ,"#FFED6F")
color<- hcl.colors(14, "Sunset")
ggplot(data_stat)+geom_bar(aes(x=Sample,y=orf_adj_coverage,fill=type,color=type),stat="identity",alpha=0.7,width = 0.8)+
scale_fill_manual("Location",values = color)+scale_color_manual("Location",values = color)+theme_bw()+labs(x="ARG Type",y="ARC coverage (x/GB)")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
#ARC host percentage(coverage)---------------------------
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(orf_adj_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(orf_adj_coverage))%>%
mutate(x=orf_adj_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
color1<-hcl.colors(7,"sunset")
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=x,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="COverage relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
##ARG orf type coverage---------------------------------------------------------------
data_stat<-data_contig%>%
group_by(Sample,type)%>%
summarise_at(vars(orf_adj_coverage), funs(sum))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=x,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Coverage relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=x,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Coverage relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
#ARC host percentage(coverage)---------------------------
data_stat<-data_contig%>%
select(Sample,contig_phyla,orf_adj_coverage,contig_adj_coverage)%>%
group_by(Sample,contig_phyla)%>%
summarise_at(vars(orf_adj_coverage), funs(sum))%>%
group_by(Sample)%>%
mutate(sum_coverage=sum(orf_adj_coverage))%>%
mutate(x=orf_adj_coverage/sum_coverage)
convert_column_names <- function(data, column) {
column_names <- c("T1", "T2", "T3", "T4", "T5")
new_names <- c("Raw", "Finished", "Upstream", "Midstream", "Downstream")
for (i in seq_along(column_names)) {
data[[column]][data[[column]] == column_names[i]] <- new_names[i]
}
return(data)
}
data_stat <- convert_column_names(data_stat, "Sample")
color1<-hcl.colors(7,"sunset")
data_stat$Sample<-factor(data_stat$Sample,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
#relative abundance(ARC number)
ggplot(data_stat)+geom_bar(aes(x=Sample,y=x,fill=contig_phyla,color=contig_phyla),alpha=0.7,stat="identity",width=0.8)+
scale_fill_manual("ARC Phyla",values = color1)+scale_color_manual("ARC Phyla",values = color1)+theme_bw()+labs(x="Location",y="Coverage relative abundance")+
theme(axis.title = element_text(size=13),axis.text = element_text(size=12),legend.title= element_text(size=12),legend.text = element_text(size=12))
##ARG orf type coverage---------------------------------------------------------------
data_stat<-data_contig%>%
group_by(Sample,type)%>%
summarise_at(vars(orf_adj_coverage), funs(sum))
