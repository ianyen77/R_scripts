##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="group2",color="group2", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=group2),method = "pearson", label.y = 0.001)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="group2",color="group2", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=group2),method = "pearson", label.x = 200)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="group2",color="group2", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=group2),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",,color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contig number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
##Multigroup-----with normalized
x$Type<-c("Raw","Raw","Raw","Finished","Finished","Finished","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS")
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contig number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color2)
color1<-c("#F9B282","#ED7C97","#704D9E" )
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contig number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
color1<-rev(c("#F9B282","#ED7C97","#704D9E" ))
color2<-c("#704D9E","#F9B282")
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
x$Type<-factor(x$Type,levles=c("Raw","Finished","DW"))
x$Type<-factor(x$Type,levle=c("Raw","Finished","DW"))
x$Type<-factor(x$Type,levels =c("Raw","Finished","DW"))
color<-hcl.colors(5,"sunset")
color1<-rev(c("#F9B282","#ED7C97","#704D9E" ))
color2<-c("#704D9E","#F9B282")
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
x$Type<-factor(x$Type,levels =c("Raw","Finished","DWDS"))
color<-hcl.colors(5,"sunset")
color1<-rev(c("#F9B282","#ED7C97","#704D9E" ))
color2<-c("#704D9E","#F9B282")
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----with normalized
x$Type<-c("Raw","Raw","Raw","Finished","Finished","Finished","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS","DWDS")
x$Type<-factor(x$Type,levels =c("Raw","Finished","DWDS"))
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
color1<-rev(c("#F9B282","#ED7C97","#704D9E" ))
color2<-c("#704D9E","#F9B282")
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
color1<-(c("#F9B282","#ED7C97","#704D9E" )
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
color1<-c("#F9B282","#ED7C97","#704D9E" )
color2<-c("#704D9E","#F9B282")
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",fill="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+  geom_smooth(method = "lm", color = "black") +
stat_cor(label.x = 3)+stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3))+  geom_smooth(method = "lm", color = "black") +
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black") +
stat_cor(label.x = 3)+stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black") +
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "grey") +
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "#704D9E") +
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
color<-hcl.colors(4,"sunset")
color
color<-hcl.colors(6,"sunset")
color
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "#AF56A9") +
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.3) +
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.8) +
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=1 +
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=1)+
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=2)+
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=2)+
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=1)+
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=1,alpha=0.7)+
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=1,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "grey",size=1,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "grey",size=1,alpha=0.3)+
stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "grey",size=1,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.8,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----with normalized
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", conf.int = TRUE, alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type",add = "reg.line", conf.int = TRUE, alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", conf.int = TRUE, alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----with normalized, without group regression
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----with normalized, without group regression
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized,without group regression
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", conf.int = TRUE, alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----with normalized
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.3)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "black",size=0.6,alpha=0.2)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "darkgrey",size=0.6,alpha=0.2)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.6,size=3)+  geom_smooth(method = "lm", color = "darkgrey",size=0.7,alpha=0.2)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.7,size=3)+  geom_smooth(method = "lm", color = "darkgrey",size=0.7,alpha=0.2)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.7,size=3)+  geom_smooth(method = "lm", color = "grey",size=0.7,alpha=0.2)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized,without group regression
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", conf.int = TRUE, alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+geom_smooth(method = "lm", color = "darkgrey",size=0.6,alpha=0.3)+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized,without group regression
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", conf.int = TRUE, alpha=0.6,size=3,
add.params = list(fill = "lightgray"))+geom_smooth(method = "lm", color = "grey",size=0.6,alpha=0.3)+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.7,size=3)+  geom_smooth(method = "lm", color = "grey",alpha=0.2)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized,without group regression
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", conf.int = TRUE, alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+geom_smooth(method = "lm", color = "grey",alpha=0.2)+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----with normalized
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup--- without normalized,without group regression
ggscatter(data=x,x="MGE",y="ARG",color="Type", conf.int = TRUE,alpha=0.7,size=3)+  geom_smooth(method = "lm", color = "grey",alpha=0.2)+
stat_cor(method = "pearson", label.x = 300,label.y=20)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----without normalized
ggscatter(data=x,x="MGE",y="ARG",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson", label.x = 300)+theme_bw()+labs(x="Total MGE-like ORF coverage (x/GB)",y="Total ARG-like ORF(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup---with normalized,without group regression
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", conf.int = TRUE, alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+geom_smooth(method = "lm", color = "grey",alpha=0.2)+stat_cor(method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
##Multigroup-----with normalized
ggscatter(data=x,x="M_ncontig",y="A_ncontig",fill="Type",color="Type", add = "reg.line", conf.int = TRUE,alpha=0.7,size=3,
add.params = list(fill = "lightgray"))+stat_cor(aes(color=Type),method = "pearson")+theme_bw()+labs(x="Total MGE-like ORF coverage against contigs number(x/GB)",y="Total ARG-like ORF coverage against contig number(x/GB)")+
theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+scale_color_manual(values=color1)
library(ggmap)
library(ggplot2)
library(dplyr)
library(gridExtra)
library("tidyverse")
library("openxlsx")
library("stringr")
library("RColorBrewer")
sample<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/Plot/採樣位置/採樣點地理資訊.xlsx",sheet=3)
trek_df <- trek("23.125018652096625, 121.39324881712558", "22.875292748459103, 121.22908696386816", structure = "route")
library(ggmap)
library(ggplot2)
library(dplyr)
library(gridExtra)
library("tidyverse")
library("openxlsx")
library("stringr")
library("RColorBrewer")
sample<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/Plot/採樣位置/採樣點地理資訊.xlsx",sheet=3)
trek_df <- trek("23.125018652096625, 121.39324881712558", "22.875292748459103, 121.22908696386816", structure = "route")
#for safety reason we need to assign google api key each time
register_googlye(key = "AIzaSyByVs5h-0bXkzfnERL-43zp19spE7LtEoM")
library(ggmap)
library(ggplot2)
library(dplyr)
library(gridExtra)
library("tidyverse")
library("openxlsx")
library("stringr")
library("RColorBrewer")
#for safety reason we need to assign google api key each time
register_googlye(key = "AIzaSyByVs5h-0bXkzfnERL-43zp19spE7LtEoM")
#for safety reason we need to assign google api key each time
register_google(key = "AIzaSyByVs5h-0bXkzfnERL-43zp19spE7LtEoM")
trek_df <- trek("23.125018652096625, 121.39324881712558", "22.875292748459103, 121.22908696386816", structure = "route")
TaitoungMap <- get_googlemap(
center  = c(lon=121.31154590744264,lat=22.998088043256093),
zoom = 11, maptype = 'roadmap')
#draw a plot
display.brewer.pal(name="Spectral",n=11)
brewer.pal(name="Spectral",n=11)
cols=c("#66C2A5","#3288BD")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
sample<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/Plot/採樣位置/採樣點地理資訊.xlsx",sheet=3)
trek_df <- trek("23.125018652096625, 121.39324881712558", "22.875292748459103, 121.22908696386816", structure = "route")
#for safety reason we need to assign google api key each time
register_google(key = "AIzaSyByVs5h-0bXkzfnERL-43zp19spE7LtEoM")
TaitoungMap <- get_googlemap(
center  = c(lon=121.31154590744264,lat=22.998088043256093),
zoom = 11, maptype = 'roadmap')
#draw a plot
display.brewer.pal(name="Spectral",n=11)
brewer.pal(name="Spectral",n=11)
cols=c("#66C2A5","#3288BD")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
brewer.pal(name="Sunset",n=12)
brewer.pal(name="Set3",n=12)
cols=c("#BEBADA" , "#80B1D3","#FFFFB3")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(value=cols)
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
#draw a plot
display.brewer.pal(name="Spectral",n=11)
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
library(scales)
hex <- hue_pal()(2)
show_col(hex)
hex
hex <- hue_pal()(5)
show_col(hex)
hex <- hue_pal()(10)
show_col(hex)
hex <- hue_pal()(15)
hex <- hue_pal()(15)
show_col(hex)
hex <- hue_pal()(3)
show_col(hex)
brewer.pal(name="Spectral",n=11)
cols=c("#F8766D","#5E4FA2","#00BFC4")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
cols=c("#5E4FA2","#F8766D","#00BFC4")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
cols=c("#FEE08B" ,"#F8766D","#00BFC4")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
cols=c("#3288BD" ,"#F8766D","#00BFC4")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
cols=c("#3288BD" ,"#F8766D","#00BFC4")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
library(ggmap)
library(ggplot2)
library(dplyr)
library(gridExtra)
library("tidyverse")
library("openxlsx")
library("stringr")
library("RColorBrewer")
sample<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/Plot/採樣位置/採樣點地理資訊.xlsx",sheet=3)
trek_df <- trek("23.125018652096625, 121.39324881712558", "22.875292748459103, 121.22908696386816", structure = "route")
#for safety reason we need to assign google api key each time
register_google(key = "AIzaSyByVs5h-0bXkzfnERL-43zp19spE7LtEoM")
trek_df <- trek("23.125018652096625, 121.39324881712558", "22.875292748459103, 121.22908696386816", structure = "route")
TaitoungMap <- get_googlemap(
center  = c(lon=121.31154590744264,lat=22.998088043256093),
zoom = 11, maptype = 'roadmap')
cols=c("#3288BD" ,"#F8766D","#00BFC4")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+theme_bw()#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=4.5)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=5,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.2)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.8,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.5)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.3)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
library(scales)
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
,family="serif"
,family="serif"
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
sample<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/Plot/採樣位置/採樣點地理資訊.xlsx",sheet=4)
trek_df <- trek("23.125018652096625, 121.39324881712558", "22.875292748459103, 121.22908696386816", structure = "route")
#for safety reason we need to assign google api key each time
register_google(key = "AIzaSyByVs5h-0bXkzfnERL-43zp19spE7LtEoM")
TaitoungMap <- get_googlemap(
center  = c(lon=121.31154590744264,lat=22.998088043256093),
zoom = 11, maptype = 'roadmap')
cols=c("#3288BD" ,"#F8766D","#00BFC4")
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")#scale_color_manual(values=cols)
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
shape=c(15,16,17)
TaitoungMappoint<- ggmap(TaitoungMap)+
geom_point(data=sample,aes(x=lon, y=lat,shape=type,color=type),size=3)+geom_text(data=sample,label=sample$sampeltype,family="serif",size=6,vjust =1.6,hjust=-0.1)+theme_minimal()+theme (legend.position= "none")+scale_color_manual(values=cols)+scale_shape_manual(values = shape)
#+geom_path(aes(x = lon, y = lat),  colour = "#66a182",size = 2.3, alpha = .7,data = trek_df, lineend = "square")
TaitoungMappoint
source("~/GitHub/R_scripts/Plot/amplicon sequencing pcoa.R", echo=TRUE)
View(dbpata)
View(dbpata)
View(dbpata1)
source("~/GitHub/R_scripts/Plot/amplicon sequencing pcoa.R", echo=TRUE)
